{
  "address": "0x90e6B742889B56904a596d29E5e2921A7cf32189",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "add",
          "type": "bool"
        }
      ],
      "name": "BalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deploy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DepositFrom",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "HarvestYield",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Send",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "addController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "controllers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deploy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "depositFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllControllers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "currentControllers",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPendingYield",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "harvestYield",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_controllers",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "_moduleMap",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "isController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleMap",
      "outputs": [
        {
          "internalType": "contract IModuleMap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "sendEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "add",
          "type": "bool"
        }
      ],
      "name": "updateBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdrawEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6331cd388337defe432fb394b2e87bc77102f6896a8378b97d306da99dff1895",
  "receipt": {
    "to": null,
    "from": "0xB22031425cbC6F09e3D9a87DC5294DCbe788C2A4",
    "contractAddress": "0x90e6B742889B56904a596d29E5e2921A7cf32189",
    "transactionIndex": 0,
    "gasUsed": "1944633",
    "logsBloom": "0x
    "blockHash": "0x87da417c7f24fbf565fb2d8e01b803a1721b792c059af757d54d28696133f969",
    "transactionHash": "0x6331cd388337defe432fb394b2e87bc77102f6896a8378b97d306da99dff1895",
    "logs": [],
    "blockNumber": 2417248,
    "cumulativeGasUsed": "1944633",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "346f688a9a812bd7d72b32dd553b8acc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"BalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deploy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositFrom\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"HarvestYield\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Send\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deploy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"depositFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllControllers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"currentControllers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPendingYield\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"harvestYield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_controllers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"_moduleMap\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleMap\",\"outputs\":[{\"internalType\":\"contract IModuleMap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"sendEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"add\",\"type\":\"bool\"}],\"name\":\"updateBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"params\":{\"amount\":\"The amount being deposited\",\"token\":\"The address of the deposited token\"}},\"depositFrom(address,address[],uint256[])\":{\"params\":{\"amounts\":\"Amounts to deposit\",\"from\":\"Address to deposit the tokens from\",\"tokens\":\"Tokens to deposit\"}},\"getBalance(address)\":{\"params\":{\"token\":\"The address of the token\"},\"returns\":{\"_0\":\"The balance of the token\"}},\"send(address,address[],uint256[])\":{\"params\":{\"amounts\":\"Amounts to send\",\"to\":\"Address to send the tokens to\",\"tokens\":\"Tokens to send\"}},\"sendEth(uint256,address)\":{\"params\":{\"amount\":\"Amount to send\",\"to\":\"Recipient to send ETH to\"}},\"updateBalance(address,uint256,bool)\":{\"params\":{\"add\":\"True for add, false for subtract\",\"amount\":\"The amount to adjust the balance by\",\"token\":\"The token to update\"}},\"withdraw(address,uint256)\":{\"params\":{\"amount\":\"The amount being withdrawn\",\"token\":\"The address of the withdrawal token\"}},\"withdrawEth(uint256,address)\":{\"params\":{\"amount\":\"Amount to withdraw\",\"to\":\"Destination of withdrawn ETH\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy()\":{\"notice\":\"This is just here to satisfy the interface and allow YieldManager to call during system deploy\"},\"deposit(address,uint256)\":{\"notice\":\"Used by YieldManager to deposit funds.\"},\"depositFrom(address,address[],uint256[])\":{\"notice\":\"Deposit funds from a depositor into the OTC contract.\"},\"getBalance(address)\":{\"notice\":\"Get the token balance.\"},\"getPendingYield(address)\":{\"notice\":\"This is just here to satisfy the interface\"},\"harvestYield()\":{\"notice\":\"This is just here to satisfy the interface\"},\"send(address,address[],uint256[])\":{\"notice\":\"Send funds from the OTC contract to a recipient.\"},\"sendEth(uint256,address)\":{\"notice\":\"Send ETH from the OTC contract to a recipient.\"},\"updateBalance(address,uint256,bool)\":{\"notice\":\"Admin method to update accounting\"},\"withdraw(address,uint256)\":{\"notice\":\"Used by YieldManager to withdraw funds.\"},\"withdrawEth(uint256,address)\":{\"notice\":\"Withdraw ETH from the OTC contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/yield-integrations/OTCIntegrationV0.sol\":\"OTCIntegrationV0\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"contracts/core/Controlled.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"./ModuleMapConsumer.sol\\\";\\nimport \\\"../interfaces/IKernel.sol\\\";\\n\\nabstract contract Controlled is Initializable, ModuleMapConsumer {\\n    // controller address => is a controller\\n    mapping(address => bool) internal _controllers;\\n    address[] public controllers;\\n\\n    function __Controlled_init(address[] memory controllers_, address moduleMap_) internal initializer {\\n        require(moduleMap_ != address(0), \\\"bad address\\\");\\n        for (uint256 i; i < controllers_.length; ++i) {\\n            require(controllers_[i] != address(0), \\\"bad address\\\");\\n        }\\n        for (uint256 i; i < controllers_.length; ++i) {\\n            _controllers[controllers_[i]] = true;\\n        }\\n        controllers = controllers_;\\n        __ModuleMapConsumer_init(moduleMap_);\\n    }\\n\\n    function addController(address controller) external onlyOwner {\\n        _controllers[controller] = true;\\n        bool added;\\n        for (uint256 i; i < controllers.length; ++i) {\\n            if (controller == controllers[i]) {\\n                added = true;\\n            }\\n        }\\n        if (!added) {\\n            controllers.push(controller);\\n        }\\n    }\\n\\n    modifier onlyOwner() {\\n        require(\\n            IKernel(moduleMap.getModuleAddress(Modules.Kernel)).isOwner(msg.sender),\\n            \\\"Controlled::onlyOwner: Caller is not owner\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyManager() {\\n        require(\\n            IKernel(moduleMap.getModuleAddress(Modules.Kernel)).isManager(msg.sender),\\n            \\\"Controlled::onlyManager: Caller is not manager\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyController() {\\n        require(_controllers[msg.sender], \\\"Controlled::onlyController: Caller is not controller\\\");\\n        _;\\n    }\\n\\n    function isController(address controller) external view returns (bool status) {\\n        status = _controllers[controller];\\n    }\\n\\n    function getAllControllers() external view returns (address[] memory currentControllers) {\\n        return controllers;\\n    }\\n}\\n\",\"keccak256\":\"0xbe4c36b0a1e398f29a4f344b714870a95d5037cc38fce4e60cd66d5e6a6aef9b\",\"license\":\"GPL-2.0\"},\"contracts/core/ModuleMapConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"../interfaces/IModuleMap.sol\\\";\\n\\nabstract contract ModuleMapConsumer is Initializable {\\n    IModuleMap public moduleMap;\\n\\n    function __ModuleMapConsumer_init(address moduleMap_) internal initializer {\\n        moduleMap = IModuleMap(moduleMap_);\\n    }\\n}\\n\",\"keccak256\":\"0xb229e8c09ab0a6b5f517c3537adfe08d26a46fc3ea46031ace67a00fb1900840\",\"license\":\"GPL-2.0\"},\"contracts/interfaces/IIntegration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\ninterface IIntegration {\\n    event Deploy(address token, uint256 amount);\\n    event HarvestYield(address token, uint256 amount);\\n    event Deposit(address token, uint256 amount);\\n    event Withdraw(address token, uint256 amount);\\n\\n    /**\\n     * Used by YieldManager to deposit funds.\\n     * @param tokenAddress The address of the deposited token\\n     * @param amount The amount being deposited\\n     */\\n    function deposit(address tokenAddress, uint256 amount) external;\\n\\n    /**\\n     * Used by YieldManager to withdraw funds.\\n     * @param tokenAddress The address of the withdrawal token\\n     * @param amount The amount being withdrawn\\n     */\\n    function withdraw(address tokenAddress, uint256 amount) external;\\n\\n    /**\\n     * Used by YieldManager to deploy funds.\\n     * @dev Deploys all tokens held in the integration contract to the integrated protocol\\n     */\\n    function deploy() external;\\n\\n    /**\\n     * Used by YieldManager to harvest funds.\\n     * @dev Harvests token yield from the integration\\n     */\\n    function harvestYield() external;\\n\\n    /**\\n     * Get the integration's balance of a token.\\n     * @dev has been deposited to the integration contract\\n     * @dev This returns the total amount of the underlying token that\\n     * @param tokenAddress The address of the deployed token\\n     * @return The amount of the underlying token that can be withdrawn\\n     */\\n    function getBalance(address tokenAddress) external view returns (uint256);\\n\\n    /**\\n     * Returns the total amount of yield awaing to be harvested\\n     * using the relevant integration's own function\\n     * @param tokenAddress The token to get the pending yield for\\n     * @return amount The amount of available yield for the specified token\\n     */\\n    function getPendingYield(address tokenAddress) external view returns (uint256 amount);\\n}\\n\",\"keccak256\":\"0x5f1c0946f3def553313e240f568096ccf9090659b52c51deed14f56d7559f8b8\",\"license\":\"GPL-2.0\"},\"contracts/interfaces/IKernel.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\ninterface IKernel {\\n    struct WithdrawAllAndClaimResponse {\\n        uint256[] tokenAmounts;\\n        uint256 ethWithdrawn;\\n        uint256 ethClaimed;\\n        uint256 biosClaimed;\\n    }\\n    event Withdraw(address indexed user, address[] tokens, uint256[] tokenAmounts, uint256 ethAmount);\\n    event ClaimEthRewards(address indexed user, uint256[] strategies, uint256 ethRewards);\\n    event ClaimBiosRewards(address indexed user, uint256 biosRewards);\\n    event WithdrawAllAndClaim(\\n        address indexed user,\\n        address[] tokens,\\n        uint256[] strategies,\\n        bool withdrawWethAsEth,\\n        uint256[] tokenAmounts,\\n        uint256 ethWithdrawn,\\n        uint256 ethRewards,\\n        uint256 biosRewards\\n    );\\n    event TokenAdded(\\n        address indexed tokenAddress,\\n        bool acceptingDeposits,\\n        bool acceptingWithdrawals,\\n        bool acceptingLping,\\n        bool acceptingBridging,\\n        uint256 biosRewardWeight,\\n        uint256 reserveRatioNumerator,\\n        uint256 targetLiquidityRatioNumerator,\\n        uint256 transferFeeKValueNumerator,\\n        uint256 transferFeePlatformRatioNumerator\\n    );\\n\\n    event GasAccountUpdated(address gasAccount);\\n    event TreasuryAccountUpdated(address treasuryAccount);\\n    event IntegrationAdded(address indexed contractAddress, string name);\\n    event SetBiosRewardsDuration(uint32 biosRewardsDuration);\\n    event SeedBiosRewards(uint256 biosAmount);\\n    event Deploy();\\n    event HarvestYield();\\n    event DistributeEth();\\n    event BiosBuyBack();\\n    event EthDistributionWeightsUpdated(\\n        uint32 biosBuyBackEthWeight,\\n        uint32 treasuryEthWeight,\\n        uint32 protocolFeeEthWeight,\\n        uint32 rewardsEthWeight\\n    );\\n    event GasAccountTargetEthBalanceUpdated(uint256 gasAccountTargetEthBalance);\\n\\n    /// @param account The address of the account to check if they are a manager\\n    /// @return Bool indicating whether the account is a manger\\n    function isManager(address account) external view returns (bool);\\n\\n    /// @param account The address of the account to check if they are an owner\\n    /// @return Bool indicating whether the account is an owner\\n    function isOwner(address account) external view returns (bool);\\n\\n    /// @param account The address of the account to check if they are a liquidity provider\\n    /// @return Bool indicating whether the account is a liquidity provider\\n    function isLiquidityProvider(address account) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x70fb689b3b91c20166f3c2823639933580d22a61b392aba6b08bb8c3a1c00425\",\"license\":\"GPL-2.0\"},\"contracts/interfaces/IModuleMap.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\nenum Modules {\\n    Kernel, // 0\\n    UserPositions, // 1\\n    YieldManager, // 2\\n    IntegrationMap, // 3\\n    BiosRewards, // 4\\n    EtherRewards, // 5\\n    SushiSwapTrader, // 6\\n    UniswapTrader, // 7\\n    StrategyMap, // 8\\n    StrategyManager, // 9\\n    Interconnects, // 10\\n    SwapManager, // 11\\n    Unwrapper, // 12\\n    BiosEmitter // 13\\n}\\n\\ninterface IModuleMap {\\n    function getModuleAddress(Modules key) external view returns (address);\\n}\\n\",\"keccak256\":\"0x2e7a465772a645a92442ab9c12173bd3506761e50a18178eb09d1119599f4ec8\",\"license\":\"GPL-2.0\"},\"contracts/interfaces/IOTCIntegrationV0.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"./IIntegration.sol\\\";\\n\\ninterface IOTCIntegrationV0 is IIntegration {\\n    event BalanceUpdated(address indexed token, uint256 amount, bool add);\\n    event DepositFrom(address indexed from, address indexed token, uint256 amount);\\n    event Send(address indexed to, address indexed token, uint256 amount);\\n\\n    /**\\n     * Deposit ETH to the OTC contract\\n     * @dev Send ETH value with this call\\n     */\\n    receive() external payable;\\n\\n    function initialize(address[] calldata controllers, address moduleMap) external;\\n\\n    /**\\n     * Send funds from the OTC contract to a recipient.\\n     * @param to Address to send the tokens to\\n     * @param tokens Tokens to send\\n     * @param amounts Amounts to send\\n     */\\n    function send(\\n        address to,\\n        address[] calldata tokens,\\n        uint256[] calldata amounts\\n    ) external;\\n\\n    /**\\n     * Send ETH from the OTC contract to a recipient.\\n     * @param amount Amount to send\\n     * @param to Recipient to send ETH to\\n     */\\n    function sendEth(uint256 amount, address payable to) external;\\n\\n    /**\\n     * Withdraw ETH from the OTC contract\\n     * @param amount Amount to withdraw\\n     * @param to Destination of withdrawn ETH\\n     */\\n    function withdrawEth(uint256 amount, address payable to) external;\\n\\n    /**\\n     * Deposit funds from a depositor into the OTC contract.\\n     * @param from Address to deposit the tokens from\\n     * @param tokens Tokens to deposit\\n     * @param amounts Amounts to deposit\\n     */\\n    function depositFrom(\\n        address from,\\n        address[] calldata tokens,\\n        uint256[] calldata amounts\\n    ) external;\\n\\n    /**\\n     * Admin method to update accounting\\n     * @param token The token to update\\n     * @param amount The amount to adjust the balance by\\n     * @param add True for add, false for subtract\\n     */\\n    function updateBalance(\\n        address token,\\n        uint256 amount,\\n        bool add\\n    ) external;\\n}\\n\",\"keccak256\":\"0x30f6e7d5a40c3264db8e816a2734e6a77ca18551e410e0c221c50e62e64b5d4e\",\"license\":\"GPL-2.0\"},\"contracts/yield-integrations/OTCIntegrationV0.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"../core/Controlled.sol\\\";\\nimport \\\"../core/ModuleMapConsumer.sol\\\";\\nimport \\\"../interfaces/IIntegration.sol\\\";\\nimport \\\"../interfaces/IOTCIntegrationV0.sol\\\";\\n\\ncontract OTCIntegrationV0 is Initializable, ModuleMapConsumer, Controlled, IOTCIntegrationV0 {\\n    using SafeERC20 for IERC20Metadata;\\n\\n    // token => balance\\n    mapping(address => uint256) private _balances;\\n\\n    function initialize(address[] memory _controllers, address _moduleMap) external override initializer {\\n        __Controlled_init(_controllers, _moduleMap);\\n    }\\n\\n    /**\\n     * Deposit ETH to the OTC contract\\n     * @dev Send ETH value with this call\\n     */\\n    receive() external payable override {\\n        if (msg.value != 0) {\\n            emit Deposit(address(0), msg.value);\\n        }\\n    }\\n\\n    /**\\n     * Withdraw ETH from the OTC contract\\n     * @param amount Amount to withdraw\\n     * @param to Destination of withdrawn ETH\\n     */\\n    function withdrawEth(uint256 amount, address payable to) external override onlyManager {\\n        if (amount != 0) {\\n            require(address(to) != address(0), \\\"bad address\\\");\\n            _transferEth(amount, to);\\n            emit Withdraw(address(0), amount);\\n        }\\n    }\\n\\n    /**\\n     * Send ETH from the OTC contract to a recipient.\\n     * @param amount Amount to send\\n     * @param to Recipient to send ETH to\\n     */\\n    function sendEth(uint256 amount, address payable to) external override onlyManager {\\n        if (amount != 0) {\\n            require(address(to) != address(0), \\\"bad address\\\");\\n            _transferEth(amount, to);\\n            emit Send(to, address(0), amount);\\n        }\\n    }\\n\\n    /**\\n     * Used by YieldManager to deposit funds.\\n     * @param token The address of the deposited token\\n     * @param amount The amount being deposited\\n     */\\n    function deposit(address token, uint256 amount) external override onlyController {\\n        uint256 balance = _selfBalance(token);\\n        require(balance - _balances[token] >= amount, \\\"bad amount\\\");\\n        _balances[token] = balance;\\n        emit Deposit(token, amount);\\n    }\\n\\n    /**\\n     * Used by YieldManager to withdraw funds.\\n     * @param token The address of the withdrawal token\\n     * @param amount The amount being withdrawn\\n     */\\n    function withdraw(address token, uint256 amount) external override onlyController {\\n        _balances[token] -= amount;\\n        _transferTo(token, moduleMap.getModuleAddress(Modules.Kernel), amount);\\n        emit Withdraw(token, amount);\\n    }\\n\\n    /**\\n     * Send funds from the OTC contract to a recipient.\\n     * @param to Address to send the tokens to\\n     * @param tokens Tokens to send\\n     * @param amounts Amounts to send\\n     */\\n    function send(\\n        address to,\\n        address[] calldata tokens,\\n        uint256[] calldata amounts\\n    ) external override onlyManager {\\n        require(to != address(0), \\\"bad address\\\");\\n        uint256 length = tokens.length;\\n        require(length == amounts.length, \\\"bad lengths\\\");\\n\\n        for (uint256 i; i < length; ++i) {\\n            if (amounts[i] != 0) {\\n                _balances[tokens[i]] -= amounts[i];\\n                _transferTo(tokens[i], to, amounts[i]);\\n                emit Send(to, tokens[i], amounts[i]);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Deposit funds from a depositor into the OTC contract.\\n     * @param from Address to deposit the tokens from\\n     * @param tokens Tokens to deposit\\n     * @param amounts Amounts to deposit\\n     */\\n    function depositFrom(\\n        address from,\\n        address[] calldata tokens,\\n        uint256[] calldata amounts\\n    ) external override onlyManager {\\n        uint256 length = tokens.length;\\n        require(length == amounts.length, \\\"bad lengths\\\");\\n\\n        for (uint256 i; i < length; ++i) {\\n            if (amounts[i] != 0) {\\n                _transferFrom(tokens[i], from, amounts[i]);\\n                uint256 balance = _selfBalance(tokens[i]);\\n                require(balance - _balances[tokens[i]] >= amounts[i], \\\"not enough\\\");\\n                _balances[tokens[i]] = balance;\\n                emit DepositFrom(from, tokens[i], amounts[i]);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * Admin method to update accounting\\n     * @param token The token to update\\n     * @param amount The amount to adjust the balance by\\n     * @param add True for add, false for subtract\\n     */\\n    function updateBalance(\\n        address token,\\n        uint256 amount,\\n        bool add\\n    ) external override onlyManager {\\n        if (add) {\\n            _balances[token] += amount;\\n        } else {\\n            _balances[token] -= amount;\\n        }\\n        emit BalanceUpdated(token, amount, add);\\n    }\\n\\n    /**\\n     * This is just here to satisfy the interface and allow YieldManager to\\n     * call during system deploy\\n     */\\n    function deploy() external override onlyController {}\\n\\n    /**\\n     * This is just here to satisfy the interface\\n     */\\n    function harvestYield() external override onlyController {}\\n\\n    /**\\n     * Get the token balance.\\n     * @param token The address of the token\\n     * @return The balance of the token\\n     */\\n    function getBalance(address token) external view override returns (uint256) {\\n        return token == address(0) ? address(this).balance : _balances[token];\\n    }\\n\\n    /**\\n     * This is just here to satisfy the interface\\n     */\\n    function getPendingYield(address) external pure override returns (uint256) {\\n        return 0;\\n    }\\n\\n    /**\\n     * Send Ether from this contract to a destination\\n     * @param amount Amount of Ether to send\\n     * @param to Address to send the Ether to\\n     */\\n    function _transferEth(uint256 amount, address to) internal {\\n        (bool sent, ) = payable(to).call{value: amount}(\\\"\\\");\\n        require(sent, \\\"Eth transfer fail\\\");\\n    }\\n\\n    /**\\n     * Send an amount of ERC20 token FROM a sender TO this contract\\n     * This contract must be permitted to spend the sender's tokens\\n     * @param token The ERC20 token to transfer\\n     * @param from The address of the token sender\\n     * @param amount The amount of the token to transfer in\\n     */\\n    function _transferFrom(\\n        address token,\\n        address from,\\n        uint256 amount\\n    ) internal {\\n        IERC20Metadata(token).safeTransferFrom(from, address(this), amount);\\n    }\\n\\n    /**\\n     * Send an amount of ERC20 token FROM this contract TO a recipient\\n     * @param token The ERC20 token to transfer\\n     * @param to The address of the recipient to send tokens to\\n     * @param amount The amount of the token to transfer out\\n     */\\n    function _transferTo(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) internal {\\n        IERC20Metadata(token).safeTransfer(to, amount);\\n    }\\n\\n    /**\\n     * Check the contract's balance of an ERC20 token\\n     * @param token The token to check the balance of\\n     * @return The contract's current balance of the specified token\\n     */\\n    function _selfBalance(address token) internal view returns (uint256) {\\n        return IERC20Metadata(token).balanceOf(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x94271ab083eb375810519d0c18168778b25dc9abc1712d66dcf236de2b7ab8f6\",\"license\":\"GPL-2.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612239806100206000396000f3fe6080604052600436106100d25760003560e01c80630f0a1c6f1461010d578063337993cb14610149578063343686021461016b578063412288031461018b578063462d0b2e146101ab57806347e7ef24146101cb578063537bb137146101eb578063775c300c1461021a578063a158657c1461022f578063a7fc7a071461024f578063b429afeb1461026f578063d3e46f58146102b8578063e8d991d11461021a578063e94b0dd2146102d8578063f3fef3a3146102f8578063f8129cd214610318578063f8b2cb4f1461033857600080fd5b36610108573415610106576000805160206121e48339815191526000346040516100fd929190611ee0565b60405180910390a15b005b600080fd5b34801561011957600080fd5b50600054610133906201000090046001600160a01b031681565b6040516101409190611ecc565b60405180910390f35b34801561015557600080fd5b5061015e610358565b6040516101409190611ef9565b34801561017757600080fd5b50610106610186366004611e81565b6103ba565b34801561019757600080fd5b506101066101a6366004611d1c565b610549565b3480156101b757600080fd5b506101066101c6366004611d5d565b610716565b3480156101d757600080fd5b506101066101e6366004611cf1565b610798565b3480156101f757600080fd5b5061020c610206366004611c3a565b50600090565b604051908152602001610140565b34801561022657600080fd5b5061010661087d565b34801561023b57600080fd5b5061010661024a366004611e81565b6108ae565b34801561025b57600080fd5b5061010661026a366004611c3a565b610a2c565b34801561027b57600080fd5b506102a861028a366004611c3a565b6001600160a01b031660009081526001602052604090205460ff1690565b6040519015158152602001610140565b3480156102c457600080fd5b506101066102d3366004611c72565b610c68565b3480156102e457600080fd5b506101336102f3366004611e51565b611058565b34801561030457600080fd5b50610106610313366004611cf1565b611082565b34801561032457600080fd5b50610106610333366004611c72565b61118c565b34801561034457600080fd5b5061020c610353366004611c3a565b6114c7565b606060028054806020026020016040519081016040528092919081815260200182805480156103b057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610392575b5050505050905090565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916103ef9190600401611f46565b60206040518083038186803b15801561040757600080fd5b505afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190611c56565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b815260040161046a9190611ecc565b60206040518083038186803b15801561048257600080fd5b505afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190611e35565b6104df5760405162461bcd60e51b81526004016104d690612039565b60405180910390fd5b8115610545576001600160a01b03811661050b5760405162461bcd60e51b81526004016104d690612014565b61051582826114fe565b6040518281526000906001600160a01b038316906000805160206121a48339815191529060200160405180910390a35b5050565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a9161057e9190600401611f46565b60206040518083038186803b15801561059657600080fd5b505afa1580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190611c56565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016105f99190611ecc565b60206040518083038186803b15801561061157600080fd5b505afa158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190611e35565b6106655760405162461bcd60e51b81526004016104d690612039565b801561069e576001600160a01b038316600090815260036020526040812080548492906106939084906120db565b909155506106cc9050565b6001600160a01b038316600090815260036020526040812080548492906106c69084906120f3565b90915550505b6040805183815282151560208201526001600160a01b038516917f344c79d576d93b5c6b2b3061f2f6dfd1c5aaa34694fcfa1faa5f82dc33984c40910160405180910390a2505050565b600054610100900460ff166107315760005460ff1615610739565b610739611595565b6107555760405162461bcd60e51b81526004016104d690611fc6565b600054610100900460ff16158015610777576000805461ffff19166101011790555b61078183836115a6565b8015610793576000805461ff00191690555b505050565b3360009081526001602052604090205460ff166107c75760405162461bcd60e51b81526004016104d690612087565b60006107d283611735565b6001600160a01b03841660009081526003602052604090205490915082906107fa90836120f3565b10156108355760405162461bcd60e51b815260206004820152600a60248201526918985908185b5bdd5b9d60b21b60448201526064016104d6565b6001600160a01b03831660009081526003602052604090819020829055516000805160206121e4833981519152906108709085908590611ee0565b60405180910390a1505050565b3360009081526001602052604090205460ff166108ac5760405162461bcd60e51b81526004016104d690612087565b565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916108e39190600401611f46565b60206040518083038186803b1580156108fb57600080fd5b505afa15801561090f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109339190611c56565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b815260040161095e9190611ecc565b60206040518083038186803b15801561097657600080fd5b505afa15801561098a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ae9190611e35565b6109ca5760405162461bcd60e51b81526004016104d690612039565b8115610545576001600160a01b0381166109f65760405162461bcd60e51b81526004016104d690612014565b610a0082826114fe565b6000805160206121c4833981519152600083604051610a20929190611ee0565b60405180910390a15050565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91610a619190600401611f46565b60206040518083038186803b158015610a7957600080fd5b505afa158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab19190611c56565b6001600160a01b0316632f54bf6e336040518263ffffffff1660e01b8152600401610adc9190611ecc565b60206040518083038186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190611e35565b610b8b5760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726f6c6c65643a3a6f6e6c794f776e65723a2043616c6c6572206973604482015269103737ba1037bbb732b960b11b60648201526084016104d6565b6001600160a01b03811660009081526001602081905260408220805460ff19169091179055805b600254811015610c115760028181548110610bdd57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0384811691161415610c0157600191505b610c0a81612136565b9050610bb2565b508061054557600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0384166001600160a01b03199091161790555050565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91610c9d9190600401611f46565b60206040518083038186803b158015610cb557600080fd5b505afa158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced9190611c56565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401610d189190611ecc565b60206040518083038186803b158015610d3057600080fd5b505afa158015610d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d689190611e35565b610d845760405162461bcd60e51b81526004016104d690612039565b82818114610da45760405162461bcd60e51b81526004016104d690611fa1565b60005b8181101561104f57838382818110610dcf57634e487b7160e01b600052603260045260246000fd5b9050602002013560001461103f57610e42868683818110610e0057634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610e159190611c3a565b88868685818110610e3657634e487b7160e01b600052603260045260246000fd5b905060200201356117b4565b6000610e81878784818110610e6757634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610e7c9190611c3a565b611735565b9050848483818110610ea357634e487b7160e01b600052603260045260246000fd5b9050602002013560036000898986818110610ece57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610ee39190611c3a565b6001600160a01b03168152602081019190915260400160002054610f0790836120f3565b1015610f425760405162461bcd60e51b815260206004820152600a6024820152690dcdee840cadcdeeaced60b31b60448201526064016104d6565b8060036000898986818110610f6757634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610f7c9190611c3a565b6001600160a01b03168152602081019190915260400160002055868683818110610fb657634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610fcb9190611c3a565b6001600160a01b0316886001600160a01b03167ffd2d54d2d9112ad97045b5ba3b3e53730486cf58755c7c5e10a0e34ff90fbe7f87878681811061101f57634e487b7160e01b600052603260045260246000fd5b9050602002013560405161103591815260200190565b60405180910390a3505b61104881612136565b9050610da7565b50505050505050565b6002818154811061106857600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526001602052604090205460ff166110b15760405162461bcd60e51b81526004016104d690612087565b6001600160a01b038216600090815260036020526040812080548392906110d99084906120f3565b9091555050600080546040516337c61fc560e11b815261116d9285926201000090046001600160a01b031691636f8c3f8a9161111791600401611f46565b60206040518083038186803b15801561112f57600080fd5b505afa158015611143573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111679190611c56565b836117c9565b6000805160206121c48339815191528282604051610a20929190611ee0565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916111c19190600401611f46565b60206040518083038186803b1580156111d957600080fd5b505afa1580156111ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112119190611c56565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b815260040161123c9190611ecc565b60206040518083038186803b15801561125457600080fd5b505afa158015611268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128c9190611e35565b6112a85760405162461bcd60e51b81526004016104d690612039565b6001600160a01b0385166112ce5760405162461bcd60e51b81526004016104d690612014565b828181146112ee5760405162461bcd60e51b81526004016104d690611fa1565b60005b8181101561104f5783838281811061131957634e487b7160e01b600052603260045260246000fd5b905060200201356000146114b75783838281811061134757634e487b7160e01b600052603260045260246000fd5b905060200201356003600088888581811061137257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906113879190611c3a565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113b691906120f3565b9091555061142190508686838181106113df57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906113f49190611c3a565b8886868581811061141557634e487b7160e01b600052603260045260246000fd5b905060200201356117c9565b85858281811061144157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906114569190611c3a565b6001600160a01b0316876001600160a01b03166000805160206121a483398151915286868581811061149857634e487b7160e01b600052603260045260246000fd5b905060200201356040516114ae91815260200190565b60405180910390a35b6114c081612136565b90506112f1565b60006001600160a01b038216156114f6576001600160a01b0382166000908152600360205260409020546114f8565b475b92915050565b6000816001600160a01b03168360405160006040518083038185875af1925050503d806000811461154b576040519150601f19603f3d011682016040523d82523d6000602084013e611550565b606091505b50509050806107935760405162461bcd60e51b8152602060048201526011602482015270115d1a081d1c985b9cd9995c8819985a5b607a1b60448201526064016104d6565b60006115a0306117dd565b15905090565b600054610100900460ff166115c15760005460ff16156115c9565b6115c9611595565b6115e55760405162461bcd60e51b81526004016104d690611fc6565b600054610100900460ff16158015611607576000805461ffff19166101011790555b6001600160a01b03821661162d5760405162461bcd60e51b81526004016104d690612014565b60005b83518110156116a35760006001600160a01b031684828151811061166457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031614156116935760405162461bcd60e51b81526004016104d690612014565b61169c81612136565b9050611630565b5060005b83518110156117175760018060008684815181106116d557634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905561171081612136565b90506116a7565b50825161172b906002906020860190611b67565b50610781826117ec565b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190611764903090600401611ecc565b60206040518083038186803b15801561177c57600080fd5b505afa158015611790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f89190611e69565b6107936001600160a01b038416833084611884565b6107936001600160a01b03841683836118f5565b6001600160a01b03163b151590565b600054610100900460ff166118075760005460ff161561180f565b61180f611595565b61182b5760405162461bcd60e51b81526004016104d690611fc6565b600054610100900460ff1615801561184d576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015610545576000805461ff00191690555050565b6040516001600160a01b03808516602483015283166044820152606481018290526118ef9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611914565b50505050565b6107938363a9059cbb60e01b84846040516024016118b8929190611ee0565b6000611969826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119e69092919063ffffffff16565b80519091501561079357808060200190518101906119879190611e35565b6107935760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104d6565b60606119f584846000856119ff565b90505b9392505050565b606082471015611a605760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104d6565b611a69856117dd565b611ab55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104d6565b600080866001600160a01b03168587604051611ad19190611eb0565b60006040518083038185875af1925050503d8060008114611b0e576040519150601f19603f3d011682016040523d82523d6000602084013e611b13565b606091505b5091509150611b23828286611b2e565b979650505050505050565b60608315611b3d5750816119f8565b825115611b4d5782518084602001fd5b8160405162461bcd60e51b81526004016104d69190611f6e565b828054828255906000526020600020908101928215611bbc579160200282015b82811115611bbc57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611b87565b50611bc8929150611bcc565b5090565b5b80821115611bc85760008155600101611bcd565b8035611bec8161217d565b919050565b60008083601f840112611c02578182fd5b5081356001600160401b03811115611c18578182fd5b6020830191508360208260051b8501011115611c3357600080fd5b9250929050565b600060208284031215611c4b578081fd5b81356119f88161217d565b600060208284031215611c67578081fd5b81516119f88161217d565b600080600080600060608688031215611c89578081fd5b8535611c948161217d565b945060208601356001600160401b0380821115611caf578283fd5b611cbb89838a01611bf1565b90965094506040880135915080821115611cd3578283fd5b50611ce088828901611bf1565b969995985093965092949392505050565b60008060408385031215611d03578182fd5b8235611d0e8161217d565b946020939093013593505050565b600080600060608486031215611d30578283fd5b8335611d3b8161217d565b9250602084013591506040840135611d5281612195565b809150509250925092565b60008060408385031215611d6f578182fd5b82356001600160401b0380821115611d85578384fd5b818501915085601f830112611d98578384fd5b8135602082821115611dac57611dac612167565b8160051b604051601f19603f83011681018181108682111715611dd157611dd1612167565b604052838152828101945085830182870184018b1015611def578889fd5b8896505b84871015611e1857611e0481611be1565b865260019690960195948301948301611df3565b509650611e289050878201611be1565b9450505050509250929050565b600060208284031215611e46578081fd5b81516119f881612195565b600060208284031215611e62578081fd5b5035919050565b600060208284031215611e7a578081fd5b5051919050565b60008060408385031215611e93578182fd5b823591506020830135611ea58161217d565b809150509250929050565b60008251611ec281846020870161210a565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015611f3a5783516001600160a01b031683529284019291840191600101611f15565b50909695505050505050565b60208101600e8310611f6857634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260008251806020840152611f8d81604085016020870161210a565b601f01601f19169190910160400192915050565b6020808252600b908201526a626164206c656e6774687360a81b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600b908201526a626164206164647265737360a81b604082015260600190565b6020808252602e908201527f436f6e74726f6c6c65643a3a6f6e6c794d616e616765723a2043616c6c65722060408201526d34b9903737ba1036b0b730b3b2b960911b606082015260800190565b60208082526034908201527f436f6e74726f6c6c65643a3a6f6e6c79436f6e74726f6c6c65723a2043616c6c60408201527332b91034b9903737ba1031b7b73a3937b63632b960611b606082015260800190565b600082198211156120ee576120ee612151565b500190565b60008282101561210557612105612151565b500390565b60005b8381101561212557818101518382015260200161210d565b838111156118ef5750506000910152565b600060001982141561214a5761214a612151565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461219257600080fd5b50565b801515811461219257600080fdfe93eb3c629eb575edaf0252e4f9fc0c5ccada50496f8c1d32f0f93a65a8257eb5884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109ca2646970667358221220c90b842d8c3c5c92b15ffedc0fa97566151433a0c45203bda88d921aa5c0a86264736f6c63430008040033",
  "deployedBytecode": "0x6080604052600436106100d25760003560e01c80630f0a1c6f1461010d578063337993cb14610149578063343686021461016b578063412288031461018b578063462d0b2e146101ab57806347e7ef24146101cb578063537bb137146101eb578063775c300c1461021a578063a158657c1461022f578063a7fc7a071461024f578063b429afeb1461026f578063d3e46f58146102b8578063e8d991d11461021a578063e94b0dd2146102d8578063f3fef3a3146102f8578063f8129cd214610318578063f8b2cb4f1461033857600080fd5b36610108573415610106576000805160206121e48339815191526000346040516100fd929190611ee0565b60405180910390a15b005b600080fd5b34801561011957600080fd5b50600054610133906201000090046001600160a01b031681565b6040516101409190611ecc565b60405180910390f35b34801561015557600080fd5b5061015e610358565b6040516101409190611ef9565b34801561017757600080fd5b50610106610186366004611e81565b6103ba565b34801561019757600080fd5b506101066101a6366004611d1c565b610549565b3480156101b757600080fd5b506101066101c6366004611d5d565b610716565b3480156101d757600080fd5b506101066101e6366004611cf1565b610798565b3480156101f757600080fd5b5061020c610206366004611c3a565b50600090565b604051908152602001610140565b34801561022657600080fd5b5061010661087d565b34801561023b57600080fd5b5061010661024a366004611e81565b6108ae565b34801561025b57600080fd5b5061010661026a366004611c3a565b610a2c565b34801561027b57600080fd5b506102a861028a366004611c3a565b6001600160a01b031660009081526001602052604090205460ff1690565b6040519015158152602001610140565b3480156102c457600080fd5b506101066102d3366004611c72565b610c68565b3480156102e457600080fd5b506101336102f3366004611e51565b611058565b34801561030457600080fd5b50610106610313366004611cf1565b611082565b34801561032457600080fd5b50610106610333366004611c72565b61118c565b34801561034457600080fd5b5061020c610353366004611c3a565b6114c7565b606060028054806020026020016040519081016040528092919081815260200182805480156103b057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610392575b5050505050905090565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916103ef9190600401611f46565b60206040518083038186803b15801561040757600080fd5b505afa15801561041b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043f9190611c56565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b815260040161046a9190611ecc565b60206040518083038186803b15801561048257600080fd5b505afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190611e35565b6104df5760405162461bcd60e51b81526004016104d690612039565b60405180910390fd5b8115610545576001600160a01b03811661050b5760405162461bcd60e51b81526004016104d690612014565b61051582826114fe565b6040518281526000906001600160a01b038316906000805160206121a48339815191529060200160405180910390a35b5050565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a9161057e9190600401611f46565b60206040518083038186803b15801561059657600080fd5b505afa1580156105aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ce9190611c56565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016105f99190611ecc565b60206040518083038186803b15801561061157600080fd5b505afa158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190611e35565b6106655760405162461bcd60e51b81526004016104d690612039565b801561069e576001600160a01b038316600090815260036020526040812080548492906106939084906120db565b909155506106cc9050565b6001600160a01b038316600090815260036020526040812080548492906106c69084906120f3565b90915550505b6040805183815282151560208201526001600160a01b038516917f344c79d576d93b5c6b2b3061f2f6dfd1c5aaa34694fcfa1faa5f82dc33984c40910160405180910390a2505050565b600054610100900460ff166107315760005460ff1615610739565b610739611595565b6107555760405162461bcd60e51b81526004016104d690611fc6565b600054610100900460ff16158015610777576000805461ffff19166101011790555b61078183836115a6565b8015610793576000805461ff00191690555b505050565b3360009081526001602052604090205460ff166107c75760405162461bcd60e51b81526004016104d690612087565b60006107d283611735565b6001600160a01b03841660009081526003602052604090205490915082906107fa90836120f3565b10156108355760405162461bcd60e51b815260206004820152600a60248201526918985908185b5bdd5b9d60b21b60448201526064016104d6565b6001600160a01b03831660009081526003602052604090819020829055516000805160206121e4833981519152906108709085908590611ee0565b60405180910390a1505050565b3360009081526001602052604090205460ff166108ac5760405162461bcd60e51b81526004016104d690612087565b565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916108e39190600401611f46565b60206040518083038186803b1580156108fb57600080fd5b505afa15801561090f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109339190611c56565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b815260040161095e9190611ecc565b60206040518083038186803b15801561097657600080fd5b505afa15801561098a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ae9190611e35565b6109ca5760405162461bcd60e51b81526004016104d690612039565b8115610545576001600160a01b0381166109f65760405162461bcd60e51b81526004016104d690612014565b610a0082826114fe565b6000805160206121c4833981519152600083604051610a20929190611ee0565b60405180910390a15050565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91610a619190600401611f46565b60206040518083038186803b158015610a7957600080fd5b505afa158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab19190611c56565b6001600160a01b0316632f54bf6e336040518263ffffffff1660e01b8152600401610adc9190611ecc565b60206040518083038186803b158015610af457600080fd5b505afa158015610b08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2c9190611e35565b610b8b5760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726f6c6c65643a3a6f6e6c794f776e65723a2043616c6c6572206973604482015269103737ba1037bbb732b960b11b60648201526084016104d6565b6001600160a01b03811660009081526001602081905260408220805460ff19169091179055805b600254811015610c115760028181548110610bdd57634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0384811691161415610c0157600191505b610c0a81612136565b9050610bb2565b508061054557600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0384166001600160a01b03199091161790555050565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91610c9d9190600401611f46565b60206040518083038186803b158015610cb557600080fd5b505afa158015610cc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ced9190611c56565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401610d189190611ecc565b60206040518083038186803b158015610d3057600080fd5b505afa158015610d44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d689190611e35565b610d845760405162461bcd60e51b81526004016104d690612039565b82818114610da45760405162461bcd60e51b81526004016104d690611fa1565b60005b8181101561104f57838382818110610dcf57634e487b7160e01b600052603260045260246000fd5b9050602002013560001461103f57610e42868683818110610e0057634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610e159190611c3a565b88868685818110610e3657634e487b7160e01b600052603260045260246000fd5b905060200201356117b4565b6000610e81878784818110610e6757634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610e7c9190611c3a565b611735565b9050848483818110610ea357634e487b7160e01b600052603260045260246000fd5b9050602002013560036000898986818110610ece57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610ee39190611c3a565b6001600160a01b03168152602081019190915260400160002054610f0790836120f3565b1015610f425760405162461bcd60e51b815260206004820152600a6024820152690dcdee840cadcdeeaced60b31b60448201526064016104d6565b8060036000898986818110610f6757634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610f7c9190611c3a565b6001600160a01b03168152602081019190915260400160002055868683818110610fb657634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610fcb9190611c3a565b6001600160a01b0316886001600160a01b03167ffd2d54d2d9112ad97045b5ba3b3e53730486cf58755c7c5e10a0e34ff90fbe7f87878681811061101f57634e487b7160e01b600052603260045260246000fd5b9050602002013560405161103591815260200190565b60405180910390a3505b61104881612136565b9050610da7565b50505050505050565b6002818154811061106857600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526001602052604090205460ff166110b15760405162461bcd60e51b81526004016104d690612087565b6001600160a01b038216600090815260036020526040812080548392906110d99084906120f3565b9091555050600080546040516337c61fc560e11b815261116d9285926201000090046001600160a01b031691636f8c3f8a9161111791600401611f46565b60206040518083038186803b15801561112f57600080fd5b505afa158015611143573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111679190611c56565b836117c9565b6000805160206121c48339815191528282604051610a20929190611ee0565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916111c19190600401611f46565b60206040518083038186803b1580156111d957600080fd5b505afa1580156111ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112119190611c56565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b815260040161123c9190611ecc565b60206040518083038186803b15801561125457600080fd5b505afa158015611268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128c9190611e35565b6112a85760405162461bcd60e51b81526004016104d690612039565b6001600160a01b0385166112ce5760405162461bcd60e51b81526004016104d690612014565b828181146112ee5760405162461bcd60e51b81526004016104d690611fa1565b60005b8181101561104f5783838281811061131957634e487b7160e01b600052603260045260246000fd5b905060200201356000146114b75783838281811061134757634e487b7160e01b600052603260045260246000fd5b905060200201356003600088888581811061137257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906113879190611c3a565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008282546113b691906120f3565b9091555061142190508686838181106113df57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906113f49190611c3a565b8886868581811061141557634e487b7160e01b600052603260045260246000fd5b905060200201356117c9565b85858281811061144157634e487b7160e01b600052603260045260246000fd5b90506020020160208101906114569190611c3a565b6001600160a01b0316876001600160a01b03166000805160206121a483398151915286868581811061149857634e487b7160e01b600052603260045260246000fd5b905060200201356040516114ae91815260200190565b60405180910390a35b6114c081612136565b90506112f1565b60006001600160a01b038216156114f6576001600160a01b0382166000908152600360205260409020546114f8565b475b92915050565b6000816001600160a01b03168360405160006040518083038185875af1925050503d806000811461154b576040519150601f19603f3d011682016040523d82523d6000602084013e611550565b606091505b50509050806107935760405162461bcd60e51b8152602060048201526011602482015270115d1a081d1c985b9cd9995c8819985a5b607a1b60448201526064016104d6565b60006115a0306117dd565b15905090565b600054610100900460ff166115c15760005460ff16156115c9565b6115c9611595565b6115e55760405162461bcd60e51b81526004016104d690611fc6565b600054610100900460ff16158015611607576000805461ffff19166101011790555b6001600160a01b03821661162d5760405162461bcd60e51b81526004016104d690612014565b60005b83518110156116a35760006001600160a01b031684828151811061166457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031614156116935760405162461bcd60e51b81526004016104d690612014565b61169c81612136565b9050611630565b5060005b83518110156117175760018060008684815181106116d557634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905561171081612136565b90506116a7565b50825161172b906002906020860190611b67565b50610781826117ec565b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190611764903090600401611ecc565b60206040518083038186803b15801561177c57600080fd5b505afa158015611790573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f89190611e69565b6107936001600160a01b038416833084611884565b6107936001600160a01b03841683836118f5565b6001600160a01b03163b151590565b600054610100900460ff166118075760005460ff161561180f565b61180f611595565b61182b5760405162461bcd60e51b81526004016104d690611fc6565b600054610100900460ff1615801561184d576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015610545576000805461ff00191690555050565b6040516001600160a01b03808516602483015283166044820152606481018290526118ef9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611914565b50505050565b6107938363a9059cbb60e01b84846040516024016118b8929190611ee0565b6000611969826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119e69092919063ffffffff16565b80519091501561079357808060200190518101906119879190611e35565b6107935760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104d6565b60606119f584846000856119ff565b90505b9392505050565b606082471015611a605760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104d6565b611a69856117dd565b611ab55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104d6565b600080866001600160a01b03168587604051611ad19190611eb0565b60006040518083038185875af1925050503d8060008114611b0e576040519150601f19603f3d011682016040523d82523d6000602084013e611b13565b606091505b5091509150611b23828286611b2e565b979650505050505050565b60608315611b3d5750816119f8565b825115611b4d5782518084602001fd5b8160405162461bcd60e51b81526004016104d69190611f6e565b828054828255906000526020600020908101928215611bbc579160200282015b82811115611bbc57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611b87565b50611bc8929150611bcc565b5090565b5b80821115611bc85760008155600101611bcd565b8035611bec8161217d565b919050565b60008083601f840112611c02578182fd5b5081356001600160401b03811115611c18578182fd5b6020830191508360208260051b8501011115611c3357600080fd5b9250929050565b600060208284031215611c4b578081fd5b81356119f88161217d565b600060208284031215611c67578081fd5b81516119f88161217d565b600080600080600060608688031215611c89578081fd5b8535611c948161217d565b945060208601356001600160401b0380821115611caf578283fd5b611cbb89838a01611bf1565b90965094506040880135915080821115611cd3578283fd5b50611ce088828901611bf1565b969995985093965092949392505050565b60008060408385031215611d03578182fd5b8235611d0e8161217d565b946020939093013593505050565b600080600060608486031215611d30578283fd5b8335611d3b8161217d565b9250602084013591506040840135611d5281612195565b809150509250925092565b60008060408385031215611d6f578182fd5b82356001600160401b0380821115611d85578384fd5b818501915085601f830112611d98578384fd5b8135602082821115611dac57611dac612167565b8160051b604051601f19603f83011681018181108682111715611dd157611dd1612167565b604052838152828101945085830182870184018b1015611def578889fd5b8896505b84871015611e1857611e0481611be1565b865260019690960195948301948301611df3565b509650611e289050878201611be1565b9450505050509250929050565b600060208284031215611e46578081fd5b81516119f881612195565b600060208284031215611e62578081fd5b5035919050565b600060208284031215611e7a578081fd5b5051919050565b60008060408385031215611e93578182fd5b823591506020830135611ea58161217d565b809150509250929050565b60008251611ec281846020870161210a565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b81811015611f3a5783516001600160a01b031683529284019291840191600101611f15565b50909695505050505050565b60208101600e8310611f6857634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260008251806020840152611f8d81604085016020870161210a565b601f01601f19169190910160400192915050565b6020808252600b908201526a626164206c656e6774687360a81b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600b908201526a626164206164647265737360a81b604082015260600190565b6020808252602e908201527f436f6e74726f6c6c65643a3a6f6e6c794d616e616765723a2043616c6c65722060408201526d34b9903737ba1036b0b730b3b2b960911b606082015260800190565b60208082526034908201527f436f6e74726f6c6c65643a3a6f6e6c79436f6e74726f6c6c65723a2043616c6c60408201527332b91034b9903737ba1031b7b73a3937b63632b960611b606082015260800190565b600082198211156120ee576120ee612151565b500190565b60008282101561210557612105612151565b500390565b60005b8381101561212557818101518382015260200161210d565b838111156118ef5750506000910152565b600060001982141561214a5761214a612151565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461219257600080fd5b50565b801515811461219257600080fdfe93eb3c629eb575edaf0252e4f9fc0c5ccada50496f8c1d32f0f93a65a8257eb5884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109ca2646970667358221220c90b842d8c3c5c92b15ffedc0fa97566151433a0c45203bda88d921aa5c0a86264736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "deposit(address,uint256)": {
        "params": {
          "amount": "The amount being deposited",
          "token": "The address of the deposited token"
        }
      },
      "depositFrom(address,address[],uint256[])": {
        "params": {
          "amounts": "Amounts to deposit",
          "from": "Address to deposit the tokens from",
          "tokens": "Tokens to deposit"
        }
      },
      "getBalance(address)": {
        "params": {
          "token": "The address of the token"
        },
        "returns": {
          "_0": "The balance of the token"
        }
      },
      "send(address,address[],uint256[])": {
        "params": {
          "amounts": "Amounts to send",
          "to": "Address to send the tokens to",
          "tokens": "Tokens to send"
        }
      },
      "sendEth(uint256,address)": {
        "params": {
          "amount": "Amount to send",
          "to": "Recipient to send ETH to"
        }
      },
      "updateBalance(address,uint256,bool)": {
        "params": {
          "add": "True for add, false for subtract",
          "amount": "The amount to adjust the balance by",
          "token": "The token to update"
        }
      },
      "withdraw(address,uint256)": {
        "params": {
          "amount": "The amount being withdrawn",
          "token": "The address of the withdrawal token"
        }
      },
      "withdrawEth(uint256,address)": {
        "params": {
          "amount": "Amount to withdraw",
          "to": "Destination of withdrawn ETH"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "deploy()": {
        "notice": "This is just here to satisfy the interface and allow YieldManager to call during system deploy"
      },
      "deposit(address,uint256)": {
        "notice": "Used by YieldManager to deposit funds."
      },
      "depositFrom(address,address[],uint256[])": {
        "notice": "Deposit funds from a depositor into the OTC contract."
      },
      "getBalance(address)": {
        "notice": "Get the token balance."
      },
      "getPendingYield(address)": {
        "notice": "This is just here to satisfy the interface"
      },
      "harvestYield()": {
        "notice": "This is just here to satisfy the interface"
      },
      "send(address,address[],uint256[])": {
        "notice": "Send funds from the OTC contract to a recipient."
      },
      "sendEth(uint256,address)": {
        "notice": "Send ETH from the OTC contract to a recipient."
      },
      "updateBalance(address,uint256,bool)": {
        "notice": "Admin method to update accounting"
      },
      "withdraw(address,uint256)": {
        "notice": "Used by YieldManager to withdraw funds."
      },
      "withdrawEth(uint256,address)": {
        "notice": "Withdraw ETH from the OTC contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 702,
        "contract": "contracts/yield-integrations/OTCIntegrationV0.sol:OTCIntegrationV0",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 705,
        "contract": "contracts/yield-integrations/OTCIntegrationV0.sol:OTCIntegrationV0",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 12684,
        "contract": "contracts/yield-integrations/OTCIntegrationV0.sol:OTCIntegrationV0",
        "label": "moduleMap",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(IModuleMap)24020"
      },
      {
        "astId": 7155,
        "contract": "contracts/yield-integrations/OTCIntegrationV0.sol:OTCIntegrationV0",
        "label": "_controllers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 7158,
        "contract": "contracts/yield-integrations/OTCIntegrationV0.sol:OTCIntegrationV0",
        "label": "controllers",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 49098,
        "contract": "contracts/yield-integrations/OTCIntegrationV0.sol:OTCIntegrationV0",
        "label": "_balances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IModuleMap)24020": {
        "encoding": "inplace",
        "label": "contract IModuleMap",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}