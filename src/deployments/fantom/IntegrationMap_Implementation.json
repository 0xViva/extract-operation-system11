{
  "address": "0x1cdd1FfFFe220225a2842F753A9EF265F45f4915",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        }
      ],
      "name": "BiosAddressUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum TokenConfigs.TokenSettingName",
          "name": "settingName",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "newValue",
          "type": "bool"
        }
      ],
      "name": "TokenSettingToggled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum TokenConfigs.TokenSettingName",
          "name": "settingName",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "TokenSettingUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "addController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "addIntegration",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "acceptingDeposits",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "acceptingWithdrawals",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "acceptingLping",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "acceptingBridging",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "biosRewardWeight",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reserveRatioNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "targetLiquidityRatioNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "transferFeeKValueNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "transferFeePlatformRatioNumerator",
          "type": "uint256"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "controllers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "disableTokenBridging",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "disableTokenDeposits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "disableTokenLping",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "disableTokenWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "enableTokenBridging",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "enableTokenDeposits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "enableTokenLping",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "enableTokenWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllControllers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "currentControllers",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBiosRewardWeightSum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rewardWeightSum",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBiosTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "integrationId",
          "type": "uint256"
        }
      ],
      "name": "getIntegrationAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIntegrationAddressesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "integrationAddress",
          "type": "address"
        }
      ],
      "name": "getIntegrationName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "integrationAddress",
          "type": "address"
        }
      ],
      "name": "getIsIntegrationAdded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getIsTokenAdded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getReserveRatioDenominator",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTargetLiquidityRatioDenominator",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenAcceptingBridging",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenAcceptingDeposits",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenAcceptingLping",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenAcceptingWithdrawals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenAddressesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenBiosRewardWeight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenReserveRatioNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenTargetLiquidityRatioNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenTransferFeeKValueNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getTokenTransferFeePlatformRatioNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransferFeeKValueDenominator",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransferFeePlatformRatioDenominator",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWethTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "controllers_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "moduleMap_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "wethTokenAddress_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "biosTokenAddress_",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "controller",
          "type": "address"
        }
      ],
      "name": "isController",
      "outputs": [
        {
          "internalType": "bool",
          "name": "status",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moduleMap",
      "outputs": [
        {
          "internalType": "contract IModuleMap",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "biosAddress",
          "type": "address"
        }
      ],
      "name": "updateBiosTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "reserveRatioNumerator",
          "type": "uint256"
        }
      ],
      "name": "updateTokenReserveRatioNumerator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardWeight",
          "type": "uint256"
        }
      ],
      "name": "updateTokenRewardWeight",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "targetLiquidityRatioNumerator",
          "type": "uint256"
        }
      ],
      "name": "updateTokenTargetLiquidityRatioNumerator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "transferFeeKValueNumerator",
          "type": "uint256"
        }
      ],
      "name": "updateTokenTransferFeeKValueNumerator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "transferFeePlatformRatioNumerator",
          "type": "uint256"
        }
      ],
      "name": "updateTokenTransferFeePlatformRatioNumerator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x319afffd63071fc068cccc9d7005f0c596c89cbbd702955a5de881724b62655d",
  "receipt": {
    "to": null,
    "from": "0x9cE013508102578854E1624EC7f179Ddf4841598",
    "contractAddress": "0x1cdd1FfFFe220225a2842F753A9EF265F45f4915",
    "transactionIndex": 0,
    "gasUsed": "3869794",
    "logsBloom": "0x
    "blockHash": "0x00013b670000119275f8cddbc33cc1aadcdfc35bc3e739675e07226563726090",
    "transactionHash": "0x319afffd63071fc068cccc9d7005f0c596c89cbbd702955a5de881724b62655d",
    "logs": [],
    "blockNumber": 30606457,
    "cumulativeGasUsed": "3869794",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "74091831759e5a287e0bfe1d33db2486",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"BiosAddressUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum TokenConfigs.TokenSettingName\",\"name\":\"settingName\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"newValue\",\"type\":\"bool\"}],\"name\":\"TokenSettingToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum TokenConfigs.TokenSettingName\",\"name\":\"settingName\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"TokenSettingUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"addController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addIntegration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"acceptingDeposits\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"acceptingWithdrawals\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"acceptingLping\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"acceptingBridging\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"biosRewardWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveRatioNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetLiquidityRatioNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transferFeeKValueNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transferFeePlatformRatioNumerator\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"controllers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"disableTokenBridging\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"disableTokenDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"disableTokenLping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"disableTokenWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"enableTokenBridging\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"enableTokenDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"enableTokenLping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"enableTokenWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllControllers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"currentControllers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBiosRewardWeightSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardWeightSum\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBiosTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"integrationId\",\"type\":\"uint256\"}],\"name\":\"getIntegrationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getIntegrationAddressesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"integrationAddress\",\"type\":\"address\"}],\"name\":\"getIntegrationName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"integrationAddress\",\"type\":\"address\"}],\"name\":\"getIsIntegrationAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getIsTokenAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserveRatioDenominator\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTargetLiquidityRatioDenominator\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenAcceptingBridging\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenAcceptingDeposits\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenAcceptingLping\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenAcceptingWithdrawals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenAddressesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenBiosRewardWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenReserveRatioNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenTargetLiquidityRatioNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenTransferFeeKValueNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenTransferFeePlatformRatioNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransferFeeKValueDenominator\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransferFeePlatformRatioDenominator\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWethTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"controllers_\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"moduleMap_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wethTokenAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"biosTokenAddress_\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"isController\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moduleMap\",\"outputs\":[{\"internalType\":\"contract IModuleMap\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"biosAddress\",\"type\":\"address\"}],\"name\":\"updateBiosTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"reserveRatioNumerator\",\"type\":\"uint256\"}],\"name\":\"updateTokenReserveRatioNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardWeight\",\"type\":\"uint256\"}],\"name\":\"updateTokenRewardWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetLiquidityRatioNumerator\",\"type\":\"uint256\"}],\"name\":\"updateTokenTargetLiquidityRatioNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferFeeKValueNumerator\",\"type\":\"uint256\"}],\"name\":\"updateTokenTransferFeeKValueNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferFeePlatformRatioNumerator\",\"type\":\"uint256\"}],\"name\":\"updateTokenTransferFeePlatformRatioNumerator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addIntegration(address,string)\":{\"params\":{\"contractAddress\":\"The address of the integration contract\",\"name\":\"The name of the protocol being integrated to\"}},\"addToken(address,bool,bool,bool,bool,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"acceptingDeposits\":\"Whether token deposits are enabled\",\"acceptingWithdrawals\":\"Whether token withdrawals are enabled\",\"biosRewardWeight\":\"Token weight for BIOS rewards\",\"reserveRatioNumerator\":\"Number that gets divided by reserve ratio denominator to get reserve ratio\",\"tokenAddress\":\"The address of the ERC20 token contract\"}},\"disableTokenBridging(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"}},\"disableTokenDeposits(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"}},\"disableTokenLping(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"}},\"disableTokenWithdrawals(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"}},\"enableTokenBridging(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"}},\"enableTokenDeposits(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"}},\"enableTokenLping(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"}},\"enableTokenWithdrawals(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"}},\"getBiosRewardWeightSum()\":{\"returns\":{\"rewardWeightSum\":\"reward weight of depositable tokens\"}},\"getBiosTokenAddress()\":{\"returns\":{\"_0\":\"The address of the BIOS token\"}},\"getIntegrationAddress(uint256)\":{\"params\":{\"integrationId\":\"The ID of the integration\"},\"returns\":{\"_0\":\"The address of the integration contract\"}},\"getIntegrationAddressesLength()\":{\"returns\":{\"_0\":\"The quantity of Integrations added\"}},\"getIntegrationName(address)\":{\"params\":{\"integrationAddress\":\"The address of the integration contract\"},\"returns\":{\"_0\":\"The name of the of the protocol being integrated to\"}},\"getReserveRatioDenominator()\":{\"returns\":{\"_0\":\"The token reserve ratio denominator\"}},\"getTargetLiquidityRatioDenominator()\":{\"returns\":{\"_0\":\"The target liquidity ratio denominator\"}},\"getTokenAcceptingBridging(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"},\"returns\":{\"_0\":\"bool indicating whether Lping this token is currently enabled\"}},\"getTokenAcceptingDeposits(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"},\"returns\":{\"_0\":\"bool indicating whether depositing this token is currently enabled\"}},\"getTokenAcceptingLping(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"},\"returns\":{\"_0\":\"bool indicating whether Lping this token is currently enabled\"}},\"getTokenAcceptingWithdrawals(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"},\"returns\":{\"_0\":\"bool indicating whether withdrawing this token is currently enabled\"}},\"getTokenAddress(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token\"},\"returns\":{\"_0\":\"The address of the token ERC20 contract\"}},\"getTokenAddressesLength()\":{\"returns\":{\"_0\":\"The quantity of tokens added\"}},\"getTokenBiosRewardWeight(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"},\"returns\":{\"_0\":\"The token BIOS reward weight\"}},\"getTokenId(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"},\"returns\":{\"_0\":\"The index of the token in the tokens array\"}},\"getTokenReserveRatioNumerator(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"},\"returns\":{\"_0\":\"The token reserve ratio numerator\"}},\"getTokenTargetLiquidityRatioNumerator(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"},\"returns\":{\"_0\":\"The number that gets divided by target liquidity ratio denominator\"}},\"getTokenTransferFeeKValueNumerator(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"},\"returns\":{\"_0\":\"The number that gets divided by transfer fee K-value denominator\"}},\"getTokenTransferFeePlatformRatioNumerator(address)\":{\"params\":{\"tokenAddress\":\"The address of the token ERC20 contract\"},\"returns\":{\"_0\":\"The number that gets divided by transfer fee platform ratio denominator\"}},\"getTransferFeeKValueDenominator()\":{\"returns\":{\"_0\":\"The transfer fee K-value denominator\"}},\"getTransferFeePlatformRatioDenominator()\":{\"returns\":{\"_0\":\"The transfer fee platform ratio denominator\"}},\"getWethTokenAddress()\":{\"returns\":{\"_0\":\"The address of the WETH token\"}},\"updateTokenReserveRatioNumerator(address,uint256)\":{\"params\":{\"reserveRatioNumerator\":\"Number that gets divided by reserve ratio denominator to get reserve ratio\",\"tokenAddress\":\"the address of the token ERC20 contract\"}},\"updateTokenRewardWeight(address,uint256)\":{\"params\":{\"rewardWeight\":\"The updated token BIOS reward weight\",\"tokenAddress\":\"The address of the token ERC20 contract\"}},\"updateTokenTargetLiquidityRatioNumerator(address,uint256)\":{\"params\":{\"targetLiquidityRatioNumerator\":\"Number that gets divided by target liquidity ratio denominator to get target liquidity ratio\",\"tokenAddress\":\"the address of the token ERC20 contract\"}},\"updateTokenTransferFeeKValueNumerator(address,uint256)\":{\"params\":{\"tokenAddress\":\"the address of the token ERC20 contract\",\"transferFeeKValueNumerator\":\"Number that gets divided by transfer fee K-value denominator to get K-value\"}},\"updateTokenTransferFeePlatformRatioNumerator(address,uint256)\":{\"params\":{\"tokenAddress\":\"the address of the token ERC20 contract\",\"transferFeePlatformRatioNumerator\":\"Number that gets divided by transfer fee platform ratio denominator to get the ratio of transfer fees sent to the platform instead of LPers\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getIntegrationAddressesLength()\":{\"notice\":\"Gets the length of supported integrations\"},\"getTokenAddressesLength()\":{\"notice\":\"Gets the length of supported tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/core/IntegrationMap.sol\":\"IntegrationMap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x68861bcc80cacbd498efde75aab6c74a486cc48262660d326c8d7530d9752097\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3f0f878c796dfc7feba6d3c4e3e526c14c7deae8b7bfc71088e3f38fab0d77b3\",\"license\":\"MIT\"},\"contracts/core/Controlled.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"./ModuleMapConsumer.sol\\\";\\nimport \\\"../interfaces/IKernel.sol\\\";\\n\\nabstract contract Controlled is Initializable, ModuleMapConsumer {\\n    // controller address => is a controller\\n    mapping(address => bool) internal _controllers;\\n    address[] public controllers;\\n\\n    function __Controlled_init(address[] memory controllers_, address moduleMap_) internal initializer {\\n        require(moduleMap_ != address(0), \\\"bad address\\\");\\n        for (uint256 i; i < controllers_.length; ++i) {\\n            require(controllers_[i] != address(0), \\\"bad address\\\");\\n        }\\n        for (uint256 i; i < controllers_.length; ++i) {\\n            _controllers[controllers_[i]] = true;\\n        }\\n        controllers = controllers_;\\n        __ModuleMapConsumer_init(moduleMap_);\\n    }\\n\\n    function addController(address controller) external onlyOwner {\\n        _controllers[controller] = true;\\n        bool added;\\n        for (uint256 i; i < controllers.length; ++i) {\\n            if (controller == controllers[i]) {\\n                added = true;\\n            }\\n        }\\n        if (!added) {\\n            controllers.push(controller);\\n        }\\n    }\\n\\n    modifier onlyOwner() {\\n        require(\\n            IKernel(moduleMap.getModuleAddress(Modules.Kernel)).isOwner(msg.sender),\\n            \\\"Controlled::onlyOwner: Caller is not owner\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyManager() {\\n        require(\\n            IKernel(moduleMap.getModuleAddress(Modules.Kernel)).isManager(msg.sender),\\n            \\\"Controlled::onlyManager: Caller is not manager\\\"\\n        );\\n        _;\\n    }\\n\\n    modifier onlyController() {\\n        require(_controllers[msg.sender], \\\"Controlled::onlyController: Caller is not controller\\\");\\n        _;\\n    }\\n\\n    function isController(address controller) external view returns (bool status) {\\n        status = _controllers[controller];\\n    }\\n\\n    function getAllControllers() external view returns (address[] memory currentControllers) {\\n        return controllers;\\n    }\\n}\\n\",\"keccak256\":\"0xbe4c36b0a1e398f29a4f344b714870a95d5037cc38fce4e60cd66d5e6a6aef9b\",\"license\":\"GPL-2.0\"},\"contracts/core/IntegrationMap.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"./ModuleMapConsumer.sol\\\";\\nimport \\\"./Controlled.sol\\\";\\nimport \\\"../interfaces/IIntegrationMap.sol\\\";\\n\\ncontract IntegrationMap is Initializable, ModuleMapConsumer, Controlled, IIntegrationMap {\\n    uint32 private constant RESERVE_RATIO_DENOMINATOR = 1_000_000;\\n    address private wethTokenAddress;\\n    address private biosTokenAddress;\\n    address[] private tokenAddresses;\\n    address[] private integrationAddresses;\\n\\n    // Integration address => Integration details\\n    mapping(address => Integration) private integrations;\\n    // Token address => Token details\\n    mapping(address => Token) private tokens;\\n\\n    uint32 private constant TARGET_LIQUIDITY_RATIO_DENOMINATOR = 1_000_000;\\n    uint32 private constant TRANSFER_FEE_K_VALUE_DENOMINATOR = 1_000_000;\\n    uint32 private constant TRANSFER_FEE_PLATFORM_RATIO_DENOMINATOR = 1_000_000;\\n\\n    function initialize(\\n        address[] memory controllers_,\\n        address moduleMap_,\\n        address wethTokenAddress_,\\n        address biosTokenAddress_\\n    ) external initializer {\\n        require(wethTokenAddress_ != address(0), \\\"bad address\\\");\\n        // actually we allow 0 address for chains with no BIOS. BIOS can be enabled later\\n        // require(biosTokenAddress_ != address(0), \\\"bad address\\\");\\n        __Controlled_init(controllers_, moduleMap_);\\n        wethTokenAddress = wethTokenAddress_;\\n        biosTokenAddress = biosTokenAddress_;\\n\\n        _addToken(wethTokenAddress_, true, true, false, false, 0, 50_000, 100_000, 40_000, 50_000);\\n\\n        if (biosTokenAddress_ != address(0)) {\\n            _addToken(biosTokenAddress_, true, true, false, false, 0, 0, 100_000, 40_000, 50_00);\\n        }\\n    }\\n\\n    /// @param contractAddress The address of the integration contract\\n    /// @param name The name of the protocol being integrated to\\n    function addIntegration(address contractAddress, string memory name) external override onlyController {\\n        require(!integrations[contractAddress].added, \\\"IntegrationMap::addIntegration: Integration already added\\\");\\n        integrations[contractAddress].added = true;\\n        integrations[contractAddress].name = name;\\n        integrationAddresses.push(contractAddress);\\n    }\\n\\n    /// @param tokenAddress The address of the ERC20 token contract\\n    /// @param acceptingDeposits Whether token deposits are enabled\\n    /// @param acceptingWithdrawals Whether token withdrawals are enabled\\n    /// @param biosRewardWeight Token weight for BIOS rewards\\n    /// @param reserveRatioNumerator Number that gets divided by reserve ratio denominator to get reserve ratio\\n    function _addToken(\\n        address tokenAddress,\\n        bool acceptingDeposits,\\n        bool acceptingWithdrawals,\\n        bool acceptingLping,\\n        bool acceptingBridging,\\n        uint256 biosRewardWeight,\\n        uint256 reserveRatioNumerator,\\n        uint256 targetLiquidityRatioNumerator,\\n        uint256 transferFeeKValueNumerator,\\n        uint256 transferFeePlatformRatioNumerator\\n    ) internal {\\n        // We skip instead of error when you re-add a token due to great migration of 2021\\n        if (tokens[tokenAddress].added) {\\n            return;\\n        }\\n\\n        require(\\n            reserveRatioNumerator <= RESERVE_RATIO_DENOMINATOR,\\n            \\\"IntegrationMap::addToken: reserveRatioNumerator must be less than or equal to reserve ratio denominator\\\"\\n        );\\n        require(\\n            targetLiquidityRatioNumerator <= TARGET_LIQUIDITY_RATIO_DENOMINATOR,\\n            \\\"IntegrationMap::addToken: targetLiquidityRatioNumerator must be less than or equal to target liquidity ratio denominator\\\"\\n        );\\n        require(\\n            transferFeeKValueNumerator <= TRANSFER_FEE_K_VALUE_DENOMINATOR,\\n            \\\"IntegrationMap::addToken: transferFeeKValueNumerator must be less than or equal to transfer fee K-value denominator\\\"\\n        );\\n        require(\\n            transferFeePlatformRatioNumerator <= TRANSFER_FEE_PLATFORM_RATIO_DENOMINATOR,\\n            \\\"IntegrationMap::addToken: transferFeePlatformRatioNumerator must be less than or equal to transfer fee platform ratio denominator\\\"\\n        );\\n\\n        tokens[tokenAddress].id = tokenAddresses.length;\\n        tokens[tokenAddress].added = true;\\n        tokens[tokenAddress].acceptingDeposits = acceptingDeposits;\\n        tokens[tokenAddress].acceptingWithdrawals = acceptingWithdrawals;\\n        tokens[tokenAddress].acceptingLping = acceptingLping;\\n        tokens[tokenAddress].acceptingBridging = acceptingBridging;\\n        tokens[tokenAddress].biosRewardWeight = biosRewardWeight;\\n        tokens[tokenAddress].reserveRatioNumerator = reserveRatioNumerator;\\n        tokens[tokenAddress].targetLiquidityRatioNumerator = targetLiquidityRatioNumerator;\\n        tokens[tokenAddress].transferFeeKValueNumerator = transferFeeKValueNumerator;\\n        tokens[tokenAddress].transferFeePlatformRatioNumerator = transferFeePlatformRatioNumerator;\\n        tokenAddresses.push(tokenAddress);\\n    }\\n\\n    /// @param tokenAddress The address of the ERC20 token contract\\n    /// @param acceptingDeposits Whether token deposits are enabled\\n    /// @param acceptingWithdrawals Whether token withdrawals are enabled\\n    /// @param biosRewardWeight Token weight for BIOS rewards\\n    /// @param reserveRatioNumerator Number that gets divided by reserve ratio denominator to get reserve ratio\\n\\n    function addToken(\\n        address tokenAddress,\\n        bool acceptingDeposits,\\n        bool acceptingWithdrawals,\\n        bool acceptingLping,\\n        bool acceptingBridging,\\n        uint256 biosRewardWeight,\\n        uint256 reserveRatioNumerator,\\n        uint256 targetLiquidityRatioNumerator,\\n        uint256 transferFeeKValueNumerator,\\n        uint256 transferFeePlatformRatioNumerator\\n    ) external override onlyController {\\n        _addToken(\\n            tokenAddress,\\n            acceptingDeposits,\\n            acceptingWithdrawals,\\n            acceptingLping,\\n            acceptingBridging,\\n            biosRewardWeight,\\n            reserveRatioNumerator,\\n            targetLiquidityRatioNumerator,\\n            transferFeeKValueNumerator,\\n            transferFeePlatformRatioNumerator\\n        );\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function enableTokenDeposits(address tokenAddress) external override onlyManager {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::enableTokenDeposits: Token does not exist\\\");\\n        require(\\n            !tokens[tokenAddress].acceptingDeposits,\\n            \\\"IntegrationMap::enableTokenDeposits: Token already accepting deposits\\\"\\n        );\\n\\n        tokens[tokenAddress].acceptingDeposits = true;\\n        emit TokenSettingToggled(tokenAddress, TokenConfigs.TokenSettingName.deposit, true);\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function disableTokenDeposits(address tokenAddress) external override onlyManager {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::disableTokenDeposits: Token does not exist\\\");\\n        require(\\n            tokens[tokenAddress].acceptingDeposits,\\n            \\\"IntegrationMap::disableTokenDeposits: Token deposits already disabled\\\"\\n        );\\n\\n        tokens[tokenAddress].acceptingDeposits = false;\\n        emit TokenSettingToggled(tokenAddress, TokenConfigs.TokenSettingName.deposit, false);\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function enableTokenWithdrawals(address tokenAddress) external override onlyManager {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::enableTokenWithdrawals: Token does not exist\\\");\\n        require(\\n            !tokens[tokenAddress].acceptingWithdrawals,\\n            \\\"IntegrationMap::enableTokenWithdrawals: Token already accepting withdrawals\\\"\\n        );\\n\\n        tokens[tokenAddress].acceptingWithdrawals = true;\\n        emit TokenSettingToggled(tokenAddress, TokenConfigs.TokenSettingName.withdraw, true);\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function disableTokenWithdrawals(address tokenAddress) external override onlyManager {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::disableTokenWithdrawals: Token does not exist\\\");\\n        require(\\n            tokens[tokenAddress].acceptingWithdrawals,\\n            \\\"IntegrationMap::disableTokenWithdrawals: Token withdrawals already disabled\\\"\\n        );\\n\\n        tokens[tokenAddress].acceptingWithdrawals = false;\\n        emit TokenSettingToggled(tokenAddress, TokenConfigs.TokenSettingName.withdraw, false);\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function enableTokenLping(address tokenAddress) external override onlyManager {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::enableTokenLping: Token does not exist\\\");\\n        require(\\n            !tokens[tokenAddress].acceptingLping,\\n            \\\"IntegrationMap::enableTokenLping: Token already accepting LPing\\\"\\n        );\\n\\n        tokens[tokenAddress].acceptingLping = true;\\n        emit TokenSettingToggled(tokenAddress, TokenConfigs.TokenSettingName.lp, true);\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function disableTokenLping(address tokenAddress) external override onlyManager {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::disableTokenLping: Token does not exist\\\");\\n        require(tokens[tokenAddress].acceptingLping, \\\"IntegrationMap::disableTokenLping: Token LPing already disabled\\\");\\n\\n        tokens[tokenAddress].acceptingLping = false;\\n        emit TokenSettingToggled(tokenAddress, TokenConfigs.TokenSettingName.lp, false);\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function enableTokenBridging(address tokenAddress) external override onlyManager {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::enableTokenBridging: Token does not exist\\\");\\n        require(\\n            !tokens[tokenAddress].acceptingBridging,\\n            \\\"IntegrationMap::enableTokenBridging: Token already accepting bridging\\\"\\n        );\\n\\n        tokens[tokenAddress].acceptingBridging = true;\\n        emit TokenSettingToggled(tokenAddress, TokenConfigs.TokenSettingName.bridge, true);\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function disableTokenBridging(address tokenAddress) external override onlyManager {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::disableTokenBridging: Token does not exist\\\");\\n        require(\\n            tokens[tokenAddress].acceptingBridging,\\n            \\\"IntegrationMap::disableTokenBridging: Token bridging already disabled\\\"\\n        );\\n\\n        tokens[tokenAddress].acceptingBridging = false;\\n        emit TokenSettingToggled(tokenAddress, TokenConfigs.TokenSettingName.bridge, false);\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @param rewardWeight The updated token BIOS reward weight\\n    function updateTokenRewardWeight(address tokenAddress, uint256 rewardWeight) external override onlyManager {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::updateTokenRewardWeight: Token does not exist\\\");\\n\\n        tokens[tokenAddress].biosRewardWeight = rewardWeight;\\n\\n        emit TokenSettingUpdated(tokenAddress, TokenConfigs.TokenSettingName.rewardWeight, rewardWeight);\\n    }\\n\\n    /// @param tokenAddress the address of the token ERC20 contract\\n    /// @param reserveRatioNumerator Number that gets divided by reserve ratio denominator to get reserve ratio\\n    function updateTokenReserveRatioNumerator(address tokenAddress, uint256 reserveRatioNumerator)\\n        external\\n        override\\n        onlyManager\\n    {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::updateTokenReserveRatioNumerator: Token does not exist\\\");\\n        require(\\n            reserveRatioNumerator <= RESERVE_RATIO_DENOMINATOR,\\n            \\\"IntegrationMap::updateTokenReserveRatioNumerator: reserveRatioNumerator must be less than or equal to reserve ratio denominator\\\"\\n        );\\n\\n        tokens[tokenAddress].reserveRatioNumerator = reserveRatioNumerator;\\n\\n        emit TokenSettingUpdated(\\n            tokenAddress,\\n            TokenConfigs.TokenSettingName.reserveRatioNumerator,\\n            reserveRatioNumerator\\n        );\\n    }\\n\\n    /// @param tokenAddress the address of the token ERC20 contract\\n    /// @param targetLiquidityRatioNumerator Number that gets divided by target liquidity ratio denominator to get target liquidity ratio\\n    function updateTokenTargetLiquidityRatioNumerator(address tokenAddress, uint256 targetLiquidityRatioNumerator)\\n        external\\n        override\\n        onlyManager\\n    {\\n        require(\\n            tokens[tokenAddress].added,\\n            \\\"IntegrationMap::updateTokenTargetLiquidityRatioNumerator: Token does not exist\\\"\\n        );\\n        require(\\n            targetLiquidityRatioNumerator <= TARGET_LIQUIDITY_RATIO_DENOMINATOR,\\n            \\\"IntegrationMap::updateTokenTargetLiquidityRatioNumerator: targetLiquidityRatioNumerator must be less than or equal to target liquidity ratio denominator\\\"\\n        );\\n\\n        tokens[tokenAddress].targetLiquidityRatioNumerator = targetLiquidityRatioNumerator;\\n\\n        emit TokenSettingUpdated(\\n            tokenAddress,\\n            TokenConfigs.TokenSettingName.targetLiquidityRatioNumerator,\\n            targetLiquidityRatioNumerator\\n        );\\n    }\\n\\n    /// @param tokenAddress the address of the token ERC20 contract\\n    /// @param transferFeeKValueNumerator Number that gets divided by transfer fee K-value denominator to get K-value\\n    function updateTokenTransferFeeKValueNumerator(address tokenAddress, uint256 transferFeeKValueNumerator)\\n        external\\n        override\\n        onlyManager\\n    {\\n        require(\\n            tokens[tokenAddress].added,\\n            \\\"IntegrationMap::updateTokenTransferFeeKValueNumerator: Token does not exist\\\"\\n        );\\n        require(\\n            transferFeeKValueNumerator <= TRANSFER_FEE_K_VALUE_DENOMINATOR,\\n            \\\"IntegrationMap::updateTokenTransferFeeKValueNumerator: transferFeeKValueNumerator must be less than or equal to transfer fee K-value denominator\\\"\\n        );\\n\\n        tokens[tokenAddress].transferFeeKValueNumerator = transferFeeKValueNumerator;\\n\\n        emit TokenSettingUpdated(\\n            tokenAddress,\\n            TokenConfigs.TokenSettingName.transferFeeKValueNumerator,\\n            transferFeeKValueNumerator\\n        );\\n    }\\n\\n    /// @param tokenAddress the address of the token ERC20 contract\\n    /// @param transferFeePlatformRatioNumerator Number that gets divided by transfer fee platform ratio denominator to get the ratio of transfer fees sent to the platform instead of LPers\\n    function updateTokenTransferFeePlatformRatioNumerator(\\n        address tokenAddress,\\n        uint256 transferFeePlatformRatioNumerator\\n    ) external override onlyManager {\\n        require(\\n            tokens[tokenAddress].added,\\n            \\\"IntegrationMap::updateTokenTransferFeePlatformRatioNumerator: Token does not exist\\\"\\n        );\\n        require(\\n            transferFeePlatformRatioNumerator <= TRANSFER_FEE_PLATFORM_RATIO_DENOMINATOR,\\n            \\\"IntegrationMap::updateTokenTransferFeePlatformRatioNumerator: transferFeePlatformRatioNumerator must be less than or equal to transfer fee platform ratio denominator\\\"\\n        );\\n\\n        tokens[tokenAddress].transferFeePlatformRatioNumerator = transferFeePlatformRatioNumerator;\\n\\n        emit TokenSettingUpdated(\\n            tokenAddress,\\n            TokenConfigs.TokenSettingName.transferFeePlatformRatioNumerator,\\n            transferFeePlatformRatioNumerator\\n        );\\n    }\\n\\n    // updates the bios token. You probably have to call other functions to clean up after the old token!\\n    function updateBiosTokenAddress(address biosAddress) external onlyManager {\\n        address previousAddress = biosTokenAddress;\\n\\n        biosTokenAddress = biosAddress;\\n        if (biosAddress != address(0)) {\\n            _addToken(biosAddress, true, true, false, false, 0, 0, 100_000, 40_000, 50_000);\\n        }\\n\\n        emit BiosAddressUpdated(biosAddress, previousAddress);\\n    }\\n\\n    /// @param integrationId The ID of the integration\\n    /// @return The address of the integration contract\\n    function getIntegrationAddress(uint256 integrationId) external view override returns (address) {\\n        require(\\n            integrationId < integrationAddresses.length,\\n            \\\"IntegrationMap::getIntegrationAddress: Integration does not exist\\\"\\n        );\\n\\n        return integrationAddresses[integrationId];\\n    }\\n\\n    /// @param integrationAddress The address of the integration contract\\n    /// @return The name of the of the protocol being integrated to\\n    function getIntegrationName(address integrationAddress) external view override returns (string memory) {\\n        require(\\n            integrations[integrationAddress].added,\\n            \\\"IntegrationMap::getIntegrationName: Integration does not exist\\\"\\n        );\\n\\n        return integrations[integrationAddress].name;\\n    }\\n\\n    /// @return The address of the WETH token\\n    function getWethTokenAddress() external view override returns (address) {\\n        return wethTokenAddress;\\n    }\\n\\n    /// @return The address of the BIOS token\\n    function getBiosTokenAddress() external view override returns (address) {\\n        return biosTokenAddress;\\n    }\\n\\n    /// @param tokenId The ID of the token\\n    /// @return The address of the token ERC20 contract\\n    function getTokenAddress(uint256 tokenId) external view override returns (address) {\\n        require(tokenId < tokenAddresses.length, \\\"IntegrationMap::getTokenAddress: Token does not exist\\\");\\n        return (tokenAddresses[tokenId]);\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The index of the token in the tokens array\\n    function getTokenId(address tokenAddress) external view override returns (uint256) {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::getTokenId: Token does not exist\\\");\\n        return (tokens[tokenAddress].id);\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The token BIOS reward weight\\n    function getTokenBiosRewardWeight(address tokenAddress) external view override returns (uint256) {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::getTokenBiosRewardWeight: Token does not exist\\\");\\n        return (tokens[tokenAddress].biosRewardWeight);\\n    }\\n\\n    /// @return rewardWeightSum reward weight of depositable tokens\\n    function getBiosRewardWeightSum() external view override returns (uint256 rewardWeightSum) {\\n        for (uint256 tokenId; tokenId < tokenAddresses.length; tokenId++) {\\n            rewardWeightSum += tokens[tokenAddresses[tokenId]].biosRewardWeight;\\n        }\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return bool indicating whether depositing this token is currently enabled\\n    function getTokenAcceptingDeposits(address tokenAddress) external view override returns (bool) {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::getTokenAcceptingDeposits: Token does not exist\\\");\\n        return tokens[tokenAddress].acceptingDeposits;\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return bool indicating whether withdrawing this token is currently enabled\\n    function getTokenAcceptingWithdrawals(address tokenAddress) external view override returns (bool) {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::getTokenAcceptingWithdrawals: Token does not exist\\\");\\n        return tokens[tokenAddress].acceptingWithdrawals;\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return bool indicating whether Lping this token is currently enabled\\n    function getTokenAcceptingLping(address tokenAddress) external view override returns (bool) {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::getTokenAcceptingLping: Token does not exist\\\");\\n        return tokens[tokenAddress].acceptingLping;\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return bool indicating whether Lping this token is currently enabled\\n    function getTokenAcceptingBridging(address tokenAddress) external view override returns (bool) {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::getTokenAcceptingBridging: Token does not exist\\\");\\n        return tokens[tokenAddress].acceptingBridging;\\n    }\\n\\n    // @param tokenAddress The address of the token ERC20 contract\\n    // @return bool indicating whether the token has been added\\n    function getIsTokenAdded(address tokenAddress) external view override returns (bool) {\\n        return tokens[tokenAddress].added;\\n    }\\n\\n    // @param integrationAddress The address of the integration contract\\n    // @return bool indicating whether the integration has been added\\n    function getIsIntegrationAdded(address integrationAddress) external view override returns (bool) {\\n        return integrations[integrationAddress].added;\\n    }\\n\\n    /// @notice Gets the length of supported tokens\\n    /// @return The quantity of tokens added\\n    function getTokenAddressesLength() external view override returns (uint256) {\\n        return tokenAddresses.length;\\n    }\\n\\n    /// @notice Gets the length of supported integrations\\n    /// @return The quantity of Integrations added\\n    function getIntegrationAddressesLength() external view override returns (uint256) {\\n        return integrationAddresses.length;\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The token reserve ratio numerator\\n    function getTokenReserveRatioNumerator(address tokenAddress) external view override returns (uint256) {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::getTokenReserveRatioNumerator: Token does not exist\\\");\\n        return tokens[tokenAddress].reserveRatioNumerator;\\n    }\\n\\n    /// @return The token reserve ratio denominator\\n    function getReserveRatioDenominator() external pure override returns (uint32) {\\n        return RESERVE_RATIO_DENOMINATOR;\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The number that gets divided by target liquidity ratio denominator\\n    function getTokenTargetLiquidityRatioNumerator(address tokenAddress) external view override returns (uint256) {\\n        require(\\n            tokens[tokenAddress].added,\\n            \\\"IntegrationMap::getTokenTargetLiquidityRatioNumerator: Token does not exist\\\"\\n        );\\n        return tokens[tokenAddress].targetLiquidityRatioNumerator;\\n    }\\n\\n    /// @return The target liquidity ratio denominator\\n    function getTargetLiquidityRatioDenominator() external pure override returns (uint32) {\\n        return TARGET_LIQUIDITY_RATIO_DENOMINATOR;\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The number that gets divided by transfer fee K-value denominator\\n    function getTokenTransferFeeKValueNumerator(address tokenAddress) external view override returns (uint256) {\\n        require(tokens[tokenAddress].added, \\\"IntegrationMap::getTokenTransferFeeKValueNumerator: Token does not exist\\\");\\n        return tokens[tokenAddress].transferFeeKValueNumerator;\\n    }\\n\\n    /// @return The transfer fee K-value denominator\\n    function getTransferFeeKValueDenominator() external pure override returns (uint32) {\\n        return TRANSFER_FEE_K_VALUE_DENOMINATOR;\\n    }\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The number that gets divided by transfer fee platform ratio denominator\\n    function getTokenTransferFeePlatformRatioNumerator(address tokenAddress) external view override returns (uint256) {\\n        require(\\n            tokens[tokenAddress].added,\\n            \\\"IntegrationMap::getTokenTransferFeePlatformRatioNumerator: Token does not exist\\\"\\n        );\\n        return tokens[tokenAddress].transferFeePlatformRatioNumerator;\\n    }\\n\\n    /// @return The transfer fee platform ratio denominator\\n    function getTransferFeePlatformRatioDenominator() external pure override returns (uint32) {\\n        return TRANSFER_FEE_PLATFORM_RATIO_DENOMINATOR;\\n    }\\n}\\n\",\"keccak256\":\"0x1fc7509da38a37eea9b60a07cb4a879e77f2e3421d7875f36495d0543e2118fa\",\"license\":\"GPL-2.0\"},\"contracts/core/ModuleMapConsumer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"../interfaces/IModuleMap.sol\\\";\\n\\nabstract contract ModuleMapConsumer is Initializable {\\n    IModuleMap public moduleMap;\\n\\n    function __ModuleMapConsumer_init(address moduleMap_) internal initializer {\\n        moduleMap = IModuleMap(moduleMap_);\\n    }\\n}\\n\",\"keccak256\":\"0xb229e8c09ab0a6b5f517c3537adfe08d26a46fc3ea46031ace67a00fb1900840\",\"license\":\"GPL-2.0\"},\"contracts/interfaces/IIntegrationMap.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\nimport \\\"../libraries/TokenConfigs.sol\\\";\\n\\ninterface IIntegrationMap {\\n    event TokenSettingToggled(\\n        address indexed token,\\n        TokenConfigs.TokenSettingName indexed settingName,\\n        bool indexed newValue\\n    );\\n\\n    event TokenSettingUpdated(\\n        address indexed token,\\n        TokenConfigs.TokenSettingName indexed settingName,\\n        uint256 indexed newValue\\n    );\\n\\n    event BiosAddressUpdated(address newAddress, address oldAddress);\\n\\n    struct Integration {\\n        bool added;\\n        string name;\\n    }\\n\\n    struct Token {\\n        uint256 id;\\n        bool added;\\n        bool acceptingDeposits;\\n        bool acceptingWithdrawals;\\n        bool acceptingLping;\\n        bool acceptingBridging;\\n        uint256 biosRewardWeight;\\n        uint256 reserveRatioNumerator;\\n        uint256 targetLiquidityRatioNumerator;\\n        uint256 transferFeeKValueNumerator;\\n        uint256 transferFeePlatformRatioNumerator;\\n    }\\n\\n    /// @param contractAddress The address of the integration contract\\n    /// @param name The name of the protocol being integrated to\\n    function addIntegration(address contractAddress, string memory name) external;\\n\\n    /// @param tokenAddress The address of the ERC20 token contract\\n    /// @param acceptingDeposits Whether token deposits are enabled\\n    /// @param acceptingWithdrawals Whether token withdrawals are enabled\\n    /// @param acceptingLping Whether LPing is enabled\\n    /// @param acceptingBridging Whether bridging is enabled\\n    /// @param biosRewardWeight Token weight for BIOS rewards\\n    /// @param reserveRatioNumerator Number that gets divided by reserve ratio denominator to get reserve ratio\\n    /// @param targetLiquidityRatioNumerator Number that gets divided by target liquidity ratio denominator to get target liquidity ratio\\n    /// @param transferFeeKValueNumerator Number that gets divided by transfer fee K-value denominator to get K-value\\n    /// @param transferFeePlatformRatioNumerator Number that gets divided by transfer fee platform ratio denominator to get the ratio of transfer fees sent to the platform instead of LPers\\n    function addToken(\\n        address tokenAddress,\\n        bool acceptingDeposits,\\n        bool acceptingWithdrawals,\\n        bool acceptingLping,\\n        bool acceptingBridging,\\n        uint256 biosRewardWeight,\\n        uint256 reserveRatioNumerator,\\n        uint256 targetLiquidityRatioNumerator,\\n        uint256 transferFeeKValueNumerator,\\n        uint256 transferFeePlatformRatioNumerator\\n    ) external;\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function enableTokenDeposits(address tokenAddress) external;\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function disableTokenDeposits(address tokenAddress) external;\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function enableTokenWithdrawals(address tokenAddress) external;\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function disableTokenWithdrawals(address tokenAddress) external;\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function enableTokenLping(address tokenAddress) external;\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function disableTokenLping(address tokenAddress) external;\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function enableTokenBridging(address tokenAddress) external;\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    function disableTokenBridging(address tokenAddress) external;\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @param rewardWeight The updated token BIOS reward weight\\n    function updateTokenRewardWeight(address tokenAddress, uint256 rewardWeight) external;\\n\\n    /// @param tokenAddress the address of the token ERC20 contract\\n    /// @param reserveRatioNumerator Number that gets divided by reserve ratio denominator to get reserve ratio\\n    function updateTokenReserveRatioNumerator(address tokenAddress, uint256 reserveRatioNumerator) external;\\n\\n    /// @param tokenAddress the address of the token ERC20 contract\\n    /// @param targetLiquidityRatioNumerator Number that gets divided by target liquidity ratio denominator to get target liquidity ratio\\n    function updateTokenTargetLiquidityRatioNumerator(address tokenAddress, uint256 targetLiquidityRatioNumerator)\\n        external;\\n\\n    /// @param tokenAddress the address of the token ERC20 contract\\n    /// @param transferFeeKValueNumerator Number that gets divided by transfer fee K-value denominator to get K-value\\n    function updateTokenTransferFeeKValueNumerator(address tokenAddress, uint256 transferFeeKValueNumerator) external;\\n\\n    /// @param tokenAddress the address of the token ERC20 contract\\n    /// @param transferFeePlatformRatioNumerator Number that gets divided by transfer fee platform ratio denominator to get the ratio of transfer fees sent to the platform instead of LPers\\n    function updateTokenTransferFeePlatformRatioNumerator(\\n        address tokenAddress,\\n        uint256 transferFeePlatformRatioNumerator\\n    ) external;\\n\\n    /// @param integrationId The ID of the integration\\n    /// @return The address of the integration contract\\n    function getIntegrationAddress(uint256 integrationId) external view returns (address);\\n\\n    /// @param integrationAddress The address of the integration contract\\n    /// @return The name of the of the protocol being integrated to\\n    function getIntegrationName(address integrationAddress) external view returns (string memory);\\n\\n    /// @return The address of the WETH token\\n    function getWethTokenAddress() external view returns (address);\\n\\n    /// @return The address of the BIOS token\\n    function getBiosTokenAddress() external view returns (address);\\n\\n    /// @param tokenId The ID of the token\\n    /// @return The address of the token ERC20 contract\\n    function getTokenAddress(uint256 tokenId) external view returns (address);\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The index of the token in the tokens array\\n    function getTokenId(address tokenAddress) external view returns (uint256);\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The token BIOS reward weight\\n    function getTokenBiosRewardWeight(address tokenAddress) external view returns (uint256);\\n\\n    /// @return rewardWeightSum reward weight of depositable tokens\\n    function getBiosRewardWeightSum() external view returns (uint256 rewardWeightSum);\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return bool indicating whether depositing this token is currently enabled\\n    function getTokenAcceptingDeposits(address tokenAddress) external view returns (bool);\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return bool indicating whether withdrawing this token is currently enabled\\n    function getTokenAcceptingWithdrawals(address tokenAddress) external view returns (bool);\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return bool indicating whether Lping this token is currently enabled\\n    function getTokenAcceptingLping(address tokenAddress) external view returns (bool);\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return bool indicating whether bridging this token is currently enabled\\n    function getTokenAcceptingBridging(address tokenAddress) external view returns (bool);\\n\\n    // @param tokenAddress The address of the token ERC20 contract\\n    // @return bool indicating whether the token has been added\\n    function getIsTokenAdded(address tokenAddress) external view returns (bool);\\n\\n    // @param integrationAddress The address of the integration contract\\n    // @return bool indicating whether the integration has been added\\n    function getIsIntegrationAdded(address tokenAddress) external view returns (bool);\\n\\n    /// @notice get the length of supported tokens\\n    /// @return The quantity of tokens added\\n    function getTokenAddressesLength() external view returns (uint256);\\n\\n    /// @notice get the length of supported integrations\\n    /// @return The quantity of integrations added\\n    function getIntegrationAddressesLength() external view returns (uint256);\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The number that gets divided by reserve ratio denominator\\n    function getTokenReserveRatioNumerator(address tokenAddress) external view returns (uint256);\\n\\n    /// @return The reserve ratio denominator\\n    function getReserveRatioDenominator() external view returns (uint32);\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The number that gets divided by target liquidity ratio denominator\\n    function getTokenTargetLiquidityRatioNumerator(address tokenAddress) external view returns (uint256);\\n\\n    /// @return The target liquidity ratio denominator\\n    function getTargetLiquidityRatioDenominator() external view returns (uint32);\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The number that gets divided by transfer fee K-value denominator\\n    function getTokenTransferFeeKValueNumerator(address tokenAddress) external view returns (uint256);\\n\\n    /// @return The transfer fee K-value denominator\\n    function getTransferFeeKValueDenominator() external view returns (uint32);\\n\\n    /// @param tokenAddress The address of the token ERC20 contract\\n    /// @return The number that gets divided by transfer fee platform ratio denominator\\n    function getTokenTransferFeePlatformRatioNumerator(address tokenAddress) external view returns (uint256);\\n\\n    /// @return The transfer fee platform ratio denominator\\n    function getTransferFeePlatformRatioDenominator() external view returns (uint32);\\n}\\n\",\"keccak256\":\"0x44303b43f04ccfdbbc2cdd156b4b6b8062f27c73c286f2092411edb90b57871b\",\"license\":\"GPL-2.0\"},\"contracts/interfaces/IKernel.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\ninterface IKernel {\\n    event Withdraw(address indexed user, address[] tokens, uint256[] tokenAmounts, uint256 ethAmount);\\n    event ClaimEthRewards(address indexed user, uint256[] strategies, uint256 ethRewards);\\n    event ClaimBiosRewards(address indexed user, uint256 biosRewards);\\n    event WithdrawAllAndClaim(\\n        address indexed user,\\n        address[] tokens,\\n        uint256[] strategies,\\n        bool withdrawWethAsEth,\\n        uint256[] tokenAmounts,\\n        uint256 ethWithdrawn,\\n        uint256 ethRewards,\\n        uint256 biosRewards\\n    );\\n    event TokenAdded(\\n        address indexed tokenAddress,\\n        bool acceptingDeposits,\\n        bool acceptingWithdrawals,\\n        bool acceptingLping,\\n        bool acceptingBridging,\\n        uint256 biosRewardWeight,\\n        uint256 reserveRatioNumerator,\\n        uint256 targetLiquidityRatioNumerator,\\n        uint256 transferFeeKValueNumerator,\\n        uint256 transferFeePlatformRatioNumerator\\n    );\\n\\n    event GasAccountUpdated(address gasAccount);\\n    event TreasuryAccountUpdated(address treasuryAccount);\\n    event IntegrationAdded(address indexed contractAddress, string name);\\n    event SetBiosRewardsDuration(uint32 biosRewardsDuration);\\n    event SeedBiosRewards(uint256 biosAmount);\\n    event Deploy();\\n    event HarvestYield();\\n    event DistributeEth();\\n    event BiosBuyBack();\\n    event EthDistributionWeightsUpdated(\\n        uint32 biosBuyBackEthWeight,\\n        uint32 treasuryEthWeight,\\n        uint32 protocolFeeEthWeight,\\n        uint32 rewardsEthWeight\\n    );\\n    event GasAccountTargetEthBalanceUpdated(uint256 gasAccountTargetEthBalance);\\n\\n    /// @param account The address of the account to check if they are a manager\\n    /// @return Bool indicating whether the account is a manger\\n    function isManager(address account) external view returns (bool);\\n\\n    /// @param account The address of the account to check if they are an owner\\n    /// @return Bool indicating whether the account is an owner\\n    function isOwner(address account) external view returns (bool);\\n\\n    /// @param account The address of the account to check if they are a liquidity provider\\n    /// @return Bool indicating whether the account is a liquidity provider\\n    function isLiquidityProvider(address account) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x08f4cba9a3d62a66872327c34489e63ed0d2b3bca96aef8328f7924067df577e\",\"license\":\"GPL-2.0\"},\"contracts/interfaces/IModuleMap.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0\\npragma solidity 0.8.4;\\n\\nenum Modules {\\n    Kernel, // 0\\n    UserPositions, // 1\\n    YieldManager, // 2\\n    IntegrationMap, // 3\\n    BiosRewards, // 4\\n    EtherRewards, // 5\\n    SushiSwapTrader, // 6\\n    UniswapTrader, // 7\\n    StrategyMap, // 8\\n    StrategyManager, // 9\\n    Interconnects, // 10\\n    SwapManager, // 11\\n    Unwrapper // 12\\n}\\n\\ninterface IModuleMap {\\n    function getModuleAddress(Modules key) external view returns (address);\\n}\\n\",\"keccak256\":\"0x95f93424fb371bfb981e62eb3bb5300fb3406dc7048508363e109ca5700d6946\",\"license\":\"GPL-2.0\"},\"contracts/libraries/TokenConfigs.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.6;\\n\\n/// @title TokenConfigs contains enum and events for the different token settings used in events in Kernel and IntegrationMap\\nlibrary TokenConfigs {\\n    enum TokenSettingName {\\n        rewardWeight,\\n        reserveRatioNumerator,\\n        targetLiquidityRatioNumerator,\\n        transferFeeKValueNumerator,\\n        transferFeePlatformRatioNumerator,\\n        deposit,\\n        withdraw,\\n        lp,\\n        bridge\\n    }\\n\\n    event TokenSettingUpdated(address indexed token, TokenSettingName indexed settingName, uint256 indexed newValue);\\n\\n    event TokenSettingToggled(address indexed token, TokenSettingName indexed settingName, bool indexed newValue);\\n}\\n\",\"keccak256\":\"0x1e10d6652aa09a586757c89df6c6c380db109589bb9f9d6e625711a153b1461e\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50614509806100206000396000f3fe608060405234801561001057600080fd5b506004361061021a5760003560e01c80630b03cc6d1461021f5780630b3972cb146102345780630b8833881461025c5780630f0a1c6f1461026f5780631605691a146102955780631ba19e3e146102a85780631de4fe13146102bb578063212c86b9146102e75780632866547a146102fa5780632be5b6731461030d578063337993cb146103205780633c43134d146103355780634153db4e1461035657806344fc9b561461036957806348f115361461037a57806350e7fc371461038d57806357c5f3171461039e57806358fcf37a146103b157806367ccdf38146103c457806372836bcf146103d75780637d471f97146103ea5780637d6145d3146103fd5780637faa059714610405578063804773c81461038d57806382cb0b671461043457806385cce6ca14610447578063886560551461045a5780638b9c94891461046d5780638e591f871461047e5780638e7a4b181461049e57806394085f1c146104a6578063967cb96e1461038d578063a703b729146104b9578063a7fc7a07146104cc578063b17f0b63146104df578063b429afeb146104f2578063bca5048f1461051e578063cb8a584214610531578063d46005b114610544578063e87e53aa1461038d578063e94b0dd214610557578063ea0db2961461056a578063eab12c951461057d578063eec60c6e14610590578063f1537686146105a3578063f3582373146105b6575b600080fd5b61023261022d366004613ead565b6105be565b005b610247610242366004613d31565b61089c565b60405190151581526020015b60405180910390f35b61023261026a366004613d31565b61094e565b600054610288906201000090046001600160a01b031681565b6040516102539190613ff2565b6102326102a3366004613d31565b610bdc565b6102886102b6366004613fda565b610e31565b6102476102c9366004613d31565b6001600160a01b031660009081526007602052604090205460ff1690565b6102326102f5366004613d31565b610ef1565b610232610308366004613ead565b611158565b61023261031b366004613d31565b6113e0565b610328611585565b6040516102539190614006565b610348610343366004613d31565b6115e7565b604051908152602001610253565b610232610364366004613ead565b611697565b6004546001600160a01b0316610288565b610232610388366004613ead565b61195b565b604051620f42408152602001610253565b6102326103ac366004613d31565b611b2d565b6102476103bf366004613d31565b611d7d565b6102886103d2366004613fda565b611e23565b6103486103e5366004613d31565b611eb6565b6103486103f8366004613d31565b611f65565b600654610348565b610247610413366004613d31565b6001600160a01b031660009081526008602052604090206001015460ff1690565b610232610442366004613d31565b612029565b610348610455366004613d31565b612282565b610232610468366004613e0c565b61233e565b6003546001600160a01b0316610288565b61049161048c366004613d31565b612487565b604051610253919061407b565b6103486125c3565b6102326104b4366004613d31565b612640565b6102326104c7366004613d70565b6128a3565b6102326104da366004613d31565b6128f0565b6102476104ed366004613d31565b612b2b565b610247610500366004613d31565b6001600160a01b031660009081526001602052604090205460ff1690565b61023261052c366004613ead565b612bd2565b61023261053f366004613d31565b612e55565b610232610552366004613ed8565b61309d565b610288610565366004613fda565b6131b9565b610247610578366004613d31565b6131e3565b61034861058b366004613d31565b61328b565b61023261059e366004613d31565b613341565b6103486105b1366004613d31565b6135a1565b600554610348565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916105f39190600401614053565b60206040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b815260040161066e9190613ff2565b60206040518083038186803b15801561068657600080fd5b505afa15801561069a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106be9190613fbe565b6106e35760405162461bcd60e51b81526004016106da90614141565b60405180910390fd5b6001600160a01b03821660009081526008602052604090206001015460ff166107765760405162461bcd60e51b815260206004820152604b602482015260008051602061445483398151915260448201527f6665724665654b56616c75654e756d657261746f723a20546f6b656e20646f6560648201526a1cc81b9bdd08195e1a5cdd60aa1b608482015260a4016106da565b620f42408111156108425760405162461bcd60e51b8152602060048201526090602482015260008051602061445483398151915260448201527f6665724665654b56616c75654e756d657261746f723a207472616e736665724660648201527f65654b56616c75654e756d657261746f72206d757374206265206c657373207460848201527f68616e206f7220657175616c20746f207472616e7366657220666565204b2d7660a48201526f30b63ab2903232b737b6b4b730ba37b960811b60c482015260e4016106da565b6001600160a01b03821660009081526008602052604090206005018190558060035b6040516001600160a01b038516907f94a9ad1d62531353f56ce5906e87954e2c34a7330db39361c4b392ba0519336890600090a45050565b6001600160a01b03811660009081526008602052604081206001015460ff166109265760405162461bcd60e51b8152602060048201526042602482015260008051602061431483398151915260448201527f675769746864726177616c733a20546f6b656e20646f6573206e6f74206578696064820152611cdd60f21b608482015260a4016106da565b506001600160a01b031660009081526008602052604090206001015462010000900460ff1690565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916109839190600401614053565b60206040518083038186803b15801561099b57600080fd5b505afa1580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d39190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016109fe9190613ff2565b60206040518083038186803b158015610a1657600080fd5b505afa158015610a2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4e9190613fbe565b610a6a5760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff16610ae55760405162461bcd60e51b815260206004820152603960248201526000805160206143348339815191526044820152781a5d1cce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd603a1b60648201526084016106da565b6001600160a01b038116600090815260086020526040902060010154610100900460ff1615610b785760405162461bcd60e51b8152602060048201526045602482015260008051602061433483398151915260448201527f6974733a20546f6b656e20616c726561647920616363657074696e67206465706064820152646f7369747360d81b608482015260a4016106da565b6001600160a01b03811660009081526008602052604090206001908101805461ff00191661010017905560055b6040516001600160a01b038416907f964eb5cca489ded8042998dce63b255765605f648f384b9f282a95e4cbf829a290600090a450565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91610c119190600401614053565b60206040518083038186803b158015610c2957600080fd5b505afa158015610c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c619190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401610c8c9190613ff2565b60206040518083038186803b158015610ca457600080fd5b505afa158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc9190613fbe565b610cf85760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff16610d745760405162461bcd60e51b815260206004820152603a60248201526000805160206143948339815191526044820152791cda5d1cce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd60321b60648201526084016106da565b6001600160a01b038116600090815260086020526040902060010154610100900460ff16610e065760405162461bcd60e51b8152602060048201526045602482015260008051602061439483398151915260448201527f736974733a20546f6b656e206465706f7369747320616c72656164792064697360648201526418589b195960da1b608482015260a4016106da565b6001600160a01b0381166000908152600860205260408120600101805461ff00191690556005610ba5565b6006546000908210610eb55760405162461bcd60e51b815260206004820152604160248201527f496e746567726174696f6e4d61703a3a676574496e746567726174696f6e416460448201527f64726573733a20496e746567726174696f6e20646f6573206e6f7420657869736064820152601d60fa1b608482015260a4016106da565b60068281548110610ed657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031692915050565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91610f269190600401614053565b60206040518083038186803b158015610f3e57600080fd5b505afa158015610f52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f769190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401610fa19190613ff2565b60206040518083038186803b158015610fb957600080fd5b505afa158015610fcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff19190613fbe565b61100d5760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff1661108b5760405162461bcd60e51b815260206004820152603c60248201526000805160206143d483398151915260448201527b1c985dd85b1cce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd60221b60648201526084016106da565b6001600160a01b03811660009081526008602052604090206001015462010000900460ff16156111255760405162461bcd60e51b815260206004820152604b60248201526000805160206143d483398151915260448201527f726177616c733a20546f6b656e20616c726561647920616363657074696e672060648201526a7769746864726177616c7360a81b608482015260a4016106da565b6001600160a01b03811660009081526008602052604090206001908101805462ff00001916620100001790556006610ba5565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a9161118d9190600401614053565b60206040518083038186803b1580156111a557600080fd5b505afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd9190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016112089190613ff2565b60206040518083038186803b15801561122057600080fd5b505afa158015611234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112589190613fbe565b6112745760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03821660009081526008602052604090206001015460ff1661130a5760405162461bcd60e51b815260206004820152604e60248201526000805160206143f483398151915260448201527f744c6971756964697479526174696f4e756d657261746f723a20546f6b656e2060648201526d191bd95cc81b9bdd08195e1a5cdd60921b608482015260a4016106da565b620f42408111156113ba5760405162461bcd60e51b815260206004820152609860248201526000805160206143f483398151915260448201527f744c6971756964697479526174696f4e756d657261746f723a2074617267657460648201526000805160206143b4833981519152608482015260008051602061437483398151915260a4820152773ab4b234ba3c903930ba34b7903232b737b6b4b730ba37b960411b60c482015260e4016106da565b6001600160a01b0382166000908152600860205260409020600401819055806002610864565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916114159190600401614053565b60206040518083038186803b15801561142d57600080fd5b505afa158015611441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114659190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016114909190613ff2565b60206040518083038186803b1580156114a857600080fd5b505afa1580156114bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e09190613fbe565b6114fc5760405162461bcd60e51b81526004016106da90614141565b600480546001600160a01b038381166001600160a01b03198316811790935516901561153e5761153e82600180600080600080620186a0619c4061c350613641565b604080516001600160a01b038085168252831660208201527fe6de78377637a5695d2171fe3588a8fd2420a00c06f84722772c705743f3140e910160405180910390a15050565b606060028054806020026020016040519081016040528092919081815260200182805480156115dd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115bf575b5050505050905090565b6001600160a01b03811660009081526008602052604081206001015460ff166116785760405162461bcd60e51b815260206004820152603e60248201527f496e746567726174696f6e4d61703a3a676574546f6b656e42696f735265776160448201527f72645765696768743a20546f6b656e20646f6573206e6f74206578697374000060648201526084016106da565b506001600160a01b031660009081526008602052604090206002015490565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916116cc9190600401614053565b60206040518083038186803b1580156116e457600080fd5b505afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016117479190613ff2565b60206040518083038186803b15801561175f57600080fd5b505afa158015611773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117979190613fbe565b6117b35760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03821660009081526008602052604090206001015460ff1661184d5760405162461bcd60e51b8152602060048201526052602482015260008051602061445483398151915260448201527f666572466565506c6174666f726d526174696f4e756d657261746f723a20546f6064820152711ad95b88191bd95cc81b9bdd08195e1a5cdd60721b608482015260a4016106da565b620f42408111156119355760405162461bcd60e51b81526020600482015260a5602482015260008051602061445483398151915260448201527f666572466565506c6174666f726d526174696f4e756d657261746f723a20747260648201527f616e73666572466565506c6174666f726d526174696f4e756d657261746f722060848201527f6d757374206265206c657373207468616e206f7220657175616c20746f20747260a48201527f616e736665722066656520706c6174666f726d20726174696f2064656e6f6d6960c4820152643730ba37b960d91b60e4820152610104016106da565b6001600160a01b0382166000908152600860205260409020600601819055806004610864565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916119909190600401614053565b60206040518083038186803b1580156119a857600080fd5b505afa1580156119bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e09190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401611a0b9190613ff2565b60206040518083038186803b158015611a2357600080fd5b505afa158015611a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5b9190613fbe565b611a775760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03821660009081526008602052604090206001015460ff16611b085760405162461bcd60e51b815260206004820152603d60248201527f496e746567726174696f6e4d61703a3a757064617465546f6b656e526577617260448201527f645765696768743a20546f6b656e20646f6573206e6f7420657869737400000060648201526084016106da565b6001600160a01b03821660009081526008602052604081206002018290558190610864565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91611b629190600401614053565b60206040518083038186803b158015611b7a57600080fd5b505afa158015611b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb29190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401611bdd9190613ff2565b60206040518083038186803b158015611bf557600080fd5b505afa158015611c09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2d9190613fbe565b611c495760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff16611cc15760405162461bcd60e51b815260206004820152603660248201526000805160206143548339815191526044820152750e88151bdad95b88191bd95cc81b9bdd08195e1a5cdd60521b60648201526084016106da565b6001600160a01b0381166000908152600860205260409020600101546301000000900460ff1615611d485760405162461bcd60e51b815260206004820152603f602482015260008051602061435483398151915260448201527f3a20546f6b656e20616c726561647920616363657074696e67204c50696e670060648201526084016106da565b6001600160a01b03811660009081526008602052604090206001908101805463ff000000191663010000001790556007610ba5565b6001600160a01b03811660009081526008602052604081206001015460ff16611dfc5760405162461bcd60e51b815260206004820152603f602482015260008051602061431483398151915260448201527f674465706f736974733a20546f6b656e20646f6573206e6f742065786973740060648201526084016106da565b506001600160a01b0316600090815260086020526040902060010154610100900460ff1690565b6005546000908210611e955760405162461bcd60e51b815260206004820152603560248201527f496e746567726174696f6e4d61703a3a676574546f6b656e416464726573733a60448201527408151bdad95b88191bd95cc81b9bdd08195e1a5cdd605a1b60648201526084016106da565b60058281548110610ed657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811660009081526008602052604081206001015460ff16611f465760405162461bcd60e51b8152602060048201526048602482015260008051602061447483398151915260448201527f4665654b56616c75654e756d657261746f723a20546f6b656e20646f6573206e6064820152671bdd08195e1a5cdd60c21b608482015260a4016106da565b506001600160a01b031660009081526008602052604090206005015490565b6001600160a01b03811660009081526008602052604081206001015460ff1661200a5760405162461bcd60e51b815260206004820152604b60248201527f496e746567726174696f6e4d61703a3a676574546f6b656e5461726765744c6960448201527f71756964697479526174696f4e756d657261746f723a20546f6b656e20646f6560648201526a1cc81b9bdd08195e1a5cdd60aa1b608482015260a4016106da565b506001600160a01b031660009081526008602052604090206004015490565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a9161205e9190600401614053565b60206040518083038186803b15801561207657600080fd5b505afa15801561208a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ae9190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016120d99190613ff2565b60206040518083038186803b1580156120f157600080fd5b505afa158015612105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121299190613fbe565b6121455760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff166121c15760405162461bcd60e51b815260206004820152603a602482015260008051602061449483398151915260448201527919da5b99ce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd60321b60648201526084016106da565b6001600160a01b038116600090815260086020526040902060010154600160201b900460ff166122555760405162461bcd60e51b8152602060048201526045602482015260008051602061449483398151915260448201527f67696e673a20546f6b656e206272696467696e6720616c72656164792064697360648201526418589b195960da1b608482015260a4016106da565b6001600160a01b03811660009081526008602081905260408220600101805460ff60201b19169055610ba5565b6001600160a01b03811660009081526008602052604081206001015460ff1661231f5760405162461bcd60e51b815260206004820152604360248201527f496e746567726174696f6e4d61703a3a676574546f6b656e526573657276655260448201527f6174696f4e756d657261746f723a20546f6b656e20646f6573206e6f742065786064820152621a5cdd60ea1b608482015260a4016106da565b506001600160a01b031660009081526008602052604090206003015490565b3360009081526001602052604090205460ff1661236d5760405162461bcd60e51b81526004016106da9061418f565b6001600160a01b03821660009081526007602052604090205460ff16156123f85760405162461bcd60e51b815260206004820152603960248201527f496e746567726174696f6e4d61703a3a616464496e746567726174696f6e3a20604482015278125b9d1959dc985d1a5bdb88185b1c9958591e481859191959603a1b60648201526084016106da565b6001600160a01b0382166000908152600760209081526040909120805460ff1916600190811782558351612433939290910191840190613c37565b5050600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526007602052604090205460609060ff166125185760405162461bcd60e51b815260206004820152603e60248201527f496e746567726174696f6e4d61703a3a676574496e746567726174696f6e4e6160448201527f6d653a20496e746567726174696f6e20646f6573206e6f74206578697374000060648201526084016106da565b6001600160a01b0382166000908152600760205260409020600101805461253e9061422b565b80601f016020809104026020016040519081016040528092919081815260200182805461256a9061422b565b80156125b75780601f1061258c576101008083540402835291602001916125b7565b820191906000526020600020905b81548152906001019060200180831161259a57829003601f168201915b50505050509050919050565b6000805b60055481101561263c5760086000600583815481106125f657634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020600201546126289083614213565b91508061263481614266565b9150506125c7565b5090565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916126759190600401614053565b60206040518083038186803b15801561268d57600080fd5b505afa1580156126a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c59190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016126f09190613ff2565b60206040518083038186803b15801561270857600080fd5b505afa15801561271c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127409190613fbe565b61275c5760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff166127d75760405162461bcd60e51b815260206004820152603960248201526000805160206144b48339815191526044820152781a5b99ce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd603a1b60648201526084016106da565b6001600160a01b038116600090815260086020526040902060010154600160201b900460ff161561286c5760405162461bcd60e51b815260206004820152604560248201526000805160206144b483398151915260448201527f696e673a20546f6b656e20616c726561647920616363657074696e67206272696064820152646467696e6760d81b608482015260a4016106da565b6001600160a01b03811660009081526008602081905260409091206001908101805460ff60201b1916600160201b17905590610ba5565b3360009081526001602052604090205460ff166128d25760405162461bcd60e51b81526004016106da9061418f565b6128e48a8a8a8a8a8a8a8a8a8a613641565b50505050505050505050565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916129259190600401614053565b60206040518083038186803b15801561293d57600080fd5b505afa158015612951573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129759190613d54565b6001600160a01b0316632f54bf6e336040518263ffffffff1660e01b81526004016129a09190613ff2565b60206040518083038186803b1580156129b857600080fd5b505afa1580156129cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129f09190613fbe565b612a4f5760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726f6c6c65643a3a6f6e6c794f776e65723a2043616c6c6572206973604482015269103737ba1037bbb732b960b11b60648201526084016106da565b6001600160a01b03811660009081526001602081905260408220805460ff19169091179055805b600254811015612ad55760028181548110612aa157634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0384811691161415612ac557600191505b612ace81614266565b9050612a76565b5080612b2757600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384161790555b5050565b6001600160a01b03811660009081526008602052604081206001015460ff16612ba95760405162461bcd60e51b815260206004820152603c602482015260008051602061431483398151915260448201527b19d31c1a5b99ce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd60221b60648201526084016106da565b506001600160a01b03166000908152600860205260409020600101546301000000900460ff1690565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91612c079190600401614053565b60206040518083038186803b158015612c1f57600080fd5b505afa158015612c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c579190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401612c829190613ff2565b60206040518083038186803b158015612c9a57600080fd5b505afa158015612cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd29190613fbe565b612cee5760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03821660009081526008602052604090206001015460ff16612d7c5760405162461bcd60e51b8152602060048201526046602482015260008051602061443483398151915260448201527f7665526174696f4e756d657261746f723a20546f6b656e20646f6573206e6f7460648201526508195e1a5cdd60d21b608482015260a4016106da565b620f4240811115612e2f5760405162461bcd60e51b815260206004820152607f602482015260008051602061443483398151915260448201527f7665526174696f4e756d657261746f723a2072657365727665526174696f4e7560648201527f6d657261746f72206d757374206265206c657373207468616e206f722065717560848201527f616c20746f207265736572766520726174696f2064656e6f6d696e61746f720060a482015260c4016106da565b6001600160a01b0382166000908152600860205260409020600301819055806001610864565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91612e8a9190600401614053565b60206040518083038186803b158015612ea257600080fd5b505afa158015612eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eda9190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401612f059190613ff2565b60206040518083038186803b158015612f1d57600080fd5b505afa158015612f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f559190613fbe565b612f715760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff16612fea5760405162461bcd60e51b8152602060048201526037602482015260008051602061441483398151915260448201527619ce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd604a1b60648201526084016106da565b6001600160a01b0381166000908152600860205260409020600101546301000000900460ff166130705760405162461bcd60e51b815260206004820152603f602482015260008051602061441483398151915260448201527f673a20546f6b656e204c50696e6720616c72656164792064697361626c65640060648201526084016106da565b6001600160a01b0381166000908152600860205260408120600101805463ff000000191690556007610ba5565b600054610100900460ff166130b85760005460ff16156130bc565b303b155b6130d85760405162461bcd60e51b81526004016106da906140ce565b600054610100900460ff161580156130fa576000805461ffff19166101011790555b6001600160a01b0383166131205760405162461bcd60e51b81526004016106da9061411c565b61312a8585613a01565b600380546001600160a01b038086166001600160a01b0319928316179092556004805492851692909116919091179055613175836001806000808061c350620186a0619c4082613641565b6001600160a01b038216156131a0576131a082600180600080600080620186a0619c40611388613641565b80156131b2576000805461ff00191690555b5050505050565b600281815481106131c957600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081526008602052604081206001015460ff166132625760405162461bcd60e51b815260206004820152603f602482015260008051602061431483398151915260448201527f674272696467696e673a20546f6b656e20646f6573206e6f742065786973740060648201526084016106da565b506001600160a01b0316600090815260086020526040902060010154600160201b900460ff1690565b6001600160a01b03811660009081526008602052604081206001015460ff166133225760405162461bcd60e51b815260206004820152604f602482015260008051602061447483398151915260448201527f466565506c6174666f726d526174696f4e756d657261746f723a20546f6b656e60648201526e08191bd95cc81b9bdd08195e1a5cdd608a1b608482015260a4016106da565b506001600160a01b031660009081526008602052604090206006015490565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916133769190600401614053565b60206040518083038186803b15801561338e57600080fd5b505afa1580156133a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133c69190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016133f19190613ff2565b60206040518083038186803b15801561340957600080fd5b505afa15801561341d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134419190613fbe565b61345d5760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff166134dc5760405162461bcd60e51b815260206004820152603d60248201526000805160206142f483398151915260448201527f64726177616c733a20546f6b656e20646f6573206e6f7420657869737400000060648201526084016106da565b6001600160a01b03811660009081526008602052604090206001015462010000900460ff166135755760405162461bcd60e51b815260206004820152604b60248201526000805160206142f483398151915260448201527f64726177616c733a20546f6b656e207769746864726177616c7320616c72656160648201526a191e48191a5cd8589b195960aa1b608482015260a4016106da565b6001600160a01b0381166000908152600860205260408120600101805462ff0000191690556006610ba5565b6001600160a01b03811660009081526008602052604081206001015460ff166136255760405162461bcd60e51b815260206004820152603060248201527f496e746567726174696f6e4d61703a3a676574546f6b656e49643a20546f6b6560448201526f1b88191bd95cc81b9bdd08195e1a5cdd60821b60648201526084016106da565b506001600160a01b031660009081526008602052604090205490565b6001600160a01b038a1660009081526008602052604090206001015460ff161561366a576128e4565b620f42408411156137195760405162461bcd60e51b815260206004820152606760248201527f496e746567726174696f6e4d61703a3a616464546f6b656e3a2072657365727660448201527f65526174696f4e756d657261746f72206d757374206265206c6573732074686160648201527f6e206f7220657175616c20746f207265736572766520726174696f2064656e6f60848201526636b4b730ba37b960c91b60a482015260c4016106da565b620f42408311156137b55760405162461bcd60e51b815260206004820152607860248201527f496e746567726174696f6e4d61703a3a616464546f6b656e3a2074617267657460448201526000805160206143b483398151915260648201526000805160206143748339815191526084820152773ab4b234ba3c903930ba34b7903232b737b6b4b730ba37b960411b60a482015260c4016106da565b620f424082111561385e5760405162461bcd60e51b815260206004820152607360248201526000805160206142d483398151915260448201527f65724665654b56616c75654e756d657261746f72206d757374206265206c657360648201527f73207468616e206f7220657175616c20746f207472616e7366657220666565206084820152722596bb30b63ab2903232b737b6b4b730ba37b960691b60a482015260c4016106da565b620f424081111561391b5760405162461bcd60e51b815260206004820152608160248201526000805160206142d483398151915260448201527f6572466565506c6174666f726d526174696f4e756d657261746f72206d75737460648201527f206265206c657373207468616e206f7220657175616c20746f207472616e736660848201527f65722066656520706c6174666f726d20726174696f2064656e6f6d696e61746f60a4820152603960f91b60c482015260e4016106da565b600580546001600160a01b03909b1660008181526008602052604081209c8d556001808e0180549a1515600160201b0260ff60201b199c151563010000000263ff000000199e151562010000029e909e1663ffff0000199f15156101000261ffff19909d169c909c1783179e909e169a909a179b909b17999099169a909a1790965560028a0194909455600389019290925560048801558683015560069095019490945583549182018455929092527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180546001600160a01b0319169091179055565b600054610100900460ff16613a1c5760005460ff1615613a20565b303b155b613a3c5760405162461bcd60e51b81526004016106da906140ce565b600054610100900460ff16158015613a5e576000805461ffff19166101011790555b6001600160a01b038216613a845760405162461bcd60e51b81526004016106da9061411c565b60005b8351811015613afa5760006001600160a01b0316848281518110613abb57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03161415613aea5760405162461bcd60e51b81526004016106da9061411c565b613af381614266565b9050613a87565b5060005b8351811015613b6e576001806000868481518110613b2c57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055613b6781614266565b9050613afe565b508251613b82906002906020860190613cb7565b50613b8c82613ba3565b8015613b9e576000805461ff00191690555b505050565b600054610100900460ff16613bbe5760005460ff1615613bc2565b303b155b613bde5760405162461bcd60e51b81526004016106da906140ce565b600054610100900460ff16158015613c00576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015612b27576000805461ff00191690555050565b828054613c439061422b565b90600052602060002090601f016020900481019282613c655760008555613cab565b82601f10613c7e57805160ff1916838001178555613cab565b82800160010185558215613cab579182015b82811115613cab578251825591602001919060010190613c90565b5061263c929150613d0c565b828054828255906000526020600020908101928215613cab579160200282015b82811115613cab57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613cd7565b5b8082111561263c5760008155600101613d0d565b8035613d2c816142ad565b919050565b600060208284031215613d42578081fd5b8135613d4d816142ad565b9392505050565b600060208284031215613d65578081fd5b8151613d4d816142ad565b6000806000806000806000806000806101408b8d031215613d8f578586fd5b8a35613d9a816142ad565b995060208b0135613daa816142c5565b985060408b0135613dba816142c5565b975060608b0135613dca816142c5565b965060808b0135613dda816142c5565b999c989b50969995989760a0870135975060c08701359660e08101359650610100810135955061012001359350915050565b60008060408385031215613e1e578182fd5b8235613e29816142ad565b91506020838101356001600160401b0380821115613e45578384fd5b818601915086601f830112613e58578384fd5b813581811115613e6a57613e6a614297565b613e7c601f8201601f191685016141e3565b91508082528784828501011115613e91578485fd5b8084840185840137810190920192909252919491935090915050565b60008060408385031215613ebf578182fd5b8235613eca816142ad565b946020939093013593505050565b60008060008060808587031215613eed578384fd5b84356001600160401b0380821115613f03578586fd5b818701915087601f830112613f16578586fd5b8135602082821115613f2a57613f2a614297565b8160051b9250613f3b8184016141e3565b8281528181019085830185870184018d1015613f55578a8bfd5b8a96505b84871015613f835780359550613f6e866142ad565b85835260019690960195918301918301613f59565b509850613f939050898201613d21565b965050505050613fa560408601613d21565b9150613fb360608601613d21565b905092959194509250565b600060208284031215613fcf578081fd5b8151613d4d816142c5565b600060208284031215613feb578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156140475783516001600160a01b031683529284019291840191600101614022565b50909695505050505050565b60208101600d831061407557634e487b7160e01b600052602160045260246000fd5b91905290565b6000602080835283518082850152825b818110156140a75785810183015185820160400152820161408b565b818111156140b85783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600b908201526a626164206164647265737360a81b604082015260600190565b6020808252602e908201527f436f6e74726f6c6c65643a3a6f6e6c794d616e616765723a2043616c6c65722060408201526d34b9903737ba1036b0b730b3b2b960911b606082015260800190565b60208082526034908201527f436f6e74726f6c6c65643a3a6f6e6c79436f6e74726f6c6c65723a2043616c6c60408201527332b91034b9903737ba1031b7b73a3937b63632b960611b606082015260800190565b604051601f8201601f191681016001600160401b038111828210171561420b5761420b614297565b604052919050565b6000821982111561422657614226614281565b500190565b600181811c9082168061423f57607f821691505b6020821081141561426057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561427a5761427a614281565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146142c257600080fd5b50565b80151581146142c257600080fdfe496e746567726174696f6e4d61703a3a616464546f6b656e3a207472616e7366496e746567726174696f6e4d61703a3a64697361626c65546f6b656e57697468496e746567726174696f6e4d61703a3a676574546f6b656e416363657074696e496e746567726174696f6e4d61703a3a656e61626c65546f6b656e4465706f73496e746567726174696f6e4d61703a3a656e61626c65546f6b656e4c70696e676c657373207468616e206f7220657175616c20746f20746172676574206c6971496e746567726174696f6e4d61703a3a64697361626c65546f6b656e4465706f4c6971756964697479526174696f4e756d657261746f72206d75737420626520496e746567726174696f6e4d61703a3a656e61626c65546f6b656e5769746864496e746567726174696f6e4d61703a3a757064617465546f6b656e5461726765496e746567726174696f6e4d61703a3a64697361626c65546f6b656e4c70696e496e746567726174696f6e4d61703a3a757064617465546f6b656e5265736572496e746567726174696f6e4d61703a3a757064617465546f6b656e5472616e73496e746567726174696f6e4d61703a3a676574546f6b656e5472616e73666572496e746567726174696f6e4d61703a3a64697361626c65546f6b656e42726964496e746567726174696f6e4d61703a3a656e61626c65546f6b656e4272696467a2646970667358221220a55a8c692889d3d893994f718dcca27fdfab3bf2e1c3f3d2f5005f19e7d4620664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061021a5760003560e01c80630b03cc6d1461021f5780630b3972cb146102345780630b8833881461025c5780630f0a1c6f1461026f5780631605691a146102955780631ba19e3e146102a85780631de4fe13146102bb578063212c86b9146102e75780632866547a146102fa5780632be5b6731461030d578063337993cb146103205780633c43134d146103355780634153db4e1461035657806344fc9b561461036957806348f115361461037a57806350e7fc371461038d57806357c5f3171461039e57806358fcf37a146103b157806367ccdf38146103c457806372836bcf146103d75780637d471f97146103ea5780637d6145d3146103fd5780637faa059714610405578063804773c81461038d57806382cb0b671461043457806385cce6ca14610447578063886560551461045a5780638b9c94891461046d5780638e591f871461047e5780638e7a4b181461049e57806394085f1c146104a6578063967cb96e1461038d578063a703b729146104b9578063a7fc7a07146104cc578063b17f0b63146104df578063b429afeb146104f2578063bca5048f1461051e578063cb8a584214610531578063d46005b114610544578063e87e53aa1461038d578063e94b0dd214610557578063ea0db2961461056a578063eab12c951461057d578063eec60c6e14610590578063f1537686146105a3578063f3582373146105b6575b600080fd5b61023261022d366004613ead565b6105be565b005b610247610242366004613d31565b61089c565b60405190151581526020015b60405180910390f35b61023261026a366004613d31565b61094e565b600054610288906201000090046001600160a01b031681565b6040516102539190613ff2565b6102326102a3366004613d31565b610bdc565b6102886102b6366004613fda565b610e31565b6102476102c9366004613d31565b6001600160a01b031660009081526007602052604090205460ff1690565b6102326102f5366004613d31565b610ef1565b610232610308366004613ead565b611158565b61023261031b366004613d31565b6113e0565b610328611585565b6040516102539190614006565b610348610343366004613d31565b6115e7565b604051908152602001610253565b610232610364366004613ead565b611697565b6004546001600160a01b0316610288565b610232610388366004613ead565b61195b565b604051620f42408152602001610253565b6102326103ac366004613d31565b611b2d565b6102476103bf366004613d31565b611d7d565b6102886103d2366004613fda565b611e23565b6103486103e5366004613d31565b611eb6565b6103486103f8366004613d31565b611f65565b600654610348565b610247610413366004613d31565b6001600160a01b031660009081526008602052604090206001015460ff1690565b610232610442366004613d31565b612029565b610348610455366004613d31565b612282565b610232610468366004613e0c565b61233e565b6003546001600160a01b0316610288565b61049161048c366004613d31565b612487565b604051610253919061407b565b6103486125c3565b6102326104b4366004613d31565b612640565b6102326104c7366004613d70565b6128a3565b6102326104da366004613d31565b6128f0565b6102476104ed366004613d31565b612b2b565b610247610500366004613d31565b6001600160a01b031660009081526001602052604090205460ff1690565b61023261052c366004613ead565b612bd2565b61023261053f366004613d31565b612e55565b610232610552366004613ed8565b61309d565b610288610565366004613fda565b6131b9565b610247610578366004613d31565b6131e3565b61034861058b366004613d31565b61328b565b61023261059e366004613d31565b613341565b6103486105b1366004613d31565b6135a1565b600554610348565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916105f39190600401614053565b60206040518083038186803b15801561060b57600080fd5b505afa15801561061f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106439190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b815260040161066e9190613ff2565b60206040518083038186803b15801561068657600080fd5b505afa15801561069a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106be9190613fbe565b6106e35760405162461bcd60e51b81526004016106da90614141565b60405180910390fd5b6001600160a01b03821660009081526008602052604090206001015460ff166107765760405162461bcd60e51b815260206004820152604b602482015260008051602061445483398151915260448201527f6665724665654b56616c75654e756d657261746f723a20546f6b656e20646f6560648201526a1cc81b9bdd08195e1a5cdd60aa1b608482015260a4016106da565b620f42408111156108425760405162461bcd60e51b8152602060048201526090602482015260008051602061445483398151915260448201527f6665724665654b56616c75654e756d657261746f723a207472616e736665724660648201527f65654b56616c75654e756d657261746f72206d757374206265206c657373207460848201527f68616e206f7220657175616c20746f207472616e7366657220666565204b2d7660a48201526f30b63ab2903232b737b6b4b730ba37b960811b60c482015260e4016106da565b6001600160a01b03821660009081526008602052604090206005018190558060035b6040516001600160a01b038516907f94a9ad1d62531353f56ce5906e87954e2c34a7330db39361c4b392ba0519336890600090a45050565b6001600160a01b03811660009081526008602052604081206001015460ff166109265760405162461bcd60e51b8152602060048201526042602482015260008051602061431483398151915260448201527f675769746864726177616c733a20546f6b656e20646f6573206e6f74206578696064820152611cdd60f21b608482015260a4016106da565b506001600160a01b031660009081526008602052604090206001015462010000900460ff1690565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916109839190600401614053565b60206040518083038186803b15801561099b57600080fd5b505afa1580156109af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d39190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016109fe9190613ff2565b60206040518083038186803b158015610a1657600080fd5b505afa158015610a2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4e9190613fbe565b610a6a5760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff16610ae55760405162461bcd60e51b815260206004820152603960248201526000805160206143348339815191526044820152781a5d1cce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd603a1b60648201526084016106da565b6001600160a01b038116600090815260086020526040902060010154610100900460ff1615610b785760405162461bcd60e51b8152602060048201526045602482015260008051602061433483398151915260448201527f6974733a20546f6b656e20616c726561647920616363657074696e67206465706064820152646f7369747360d81b608482015260a4016106da565b6001600160a01b03811660009081526008602052604090206001908101805461ff00191661010017905560055b6040516001600160a01b038416907f964eb5cca489ded8042998dce63b255765605f648f384b9f282a95e4cbf829a290600090a450565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91610c119190600401614053565b60206040518083038186803b158015610c2957600080fd5b505afa158015610c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c619190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401610c8c9190613ff2565b60206040518083038186803b158015610ca457600080fd5b505afa158015610cb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cdc9190613fbe565b610cf85760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff16610d745760405162461bcd60e51b815260206004820152603a60248201526000805160206143948339815191526044820152791cda5d1cce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd60321b60648201526084016106da565b6001600160a01b038116600090815260086020526040902060010154610100900460ff16610e065760405162461bcd60e51b8152602060048201526045602482015260008051602061439483398151915260448201527f736974733a20546f6b656e206465706f7369747320616c72656164792064697360648201526418589b195960da1b608482015260a4016106da565b6001600160a01b0381166000908152600860205260408120600101805461ff00191690556005610ba5565b6006546000908210610eb55760405162461bcd60e51b815260206004820152604160248201527f496e746567726174696f6e4d61703a3a676574496e746567726174696f6e416460448201527f64726573733a20496e746567726174696f6e20646f6573206e6f7420657869736064820152601d60fa1b608482015260a4016106da565b60068281548110610ed657634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b031692915050565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91610f269190600401614053565b60206040518083038186803b158015610f3e57600080fd5b505afa158015610f52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f769190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401610fa19190613ff2565b60206040518083038186803b158015610fb957600080fd5b505afa158015610fcd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff19190613fbe565b61100d5760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff1661108b5760405162461bcd60e51b815260206004820152603c60248201526000805160206143d483398151915260448201527b1c985dd85b1cce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd60221b60648201526084016106da565b6001600160a01b03811660009081526008602052604090206001015462010000900460ff16156111255760405162461bcd60e51b815260206004820152604b60248201526000805160206143d483398151915260448201527f726177616c733a20546f6b656e20616c726561647920616363657074696e672060648201526a7769746864726177616c7360a81b608482015260a4016106da565b6001600160a01b03811660009081526008602052604090206001908101805462ff00001916620100001790556006610ba5565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a9161118d9190600401614053565b60206040518083038186803b1580156111a557600080fd5b505afa1580156111b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111dd9190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016112089190613ff2565b60206040518083038186803b15801561122057600080fd5b505afa158015611234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112589190613fbe565b6112745760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03821660009081526008602052604090206001015460ff1661130a5760405162461bcd60e51b815260206004820152604e60248201526000805160206143f483398151915260448201527f744c6971756964697479526174696f4e756d657261746f723a20546f6b656e2060648201526d191bd95cc81b9bdd08195e1a5cdd60921b608482015260a4016106da565b620f42408111156113ba5760405162461bcd60e51b815260206004820152609860248201526000805160206143f483398151915260448201527f744c6971756964697479526174696f4e756d657261746f723a2074617267657460648201526000805160206143b4833981519152608482015260008051602061437483398151915260a4820152773ab4b234ba3c903930ba34b7903232b737b6b4b730ba37b960411b60c482015260e4016106da565b6001600160a01b0382166000908152600860205260409020600401819055806002610864565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916114159190600401614053565b60206040518083038186803b15801561142d57600080fd5b505afa158015611441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114659190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016114909190613ff2565b60206040518083038186803b1580156114a857600080fd5b505afa1580156114bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e09190613fbe565b6114fc5760405162461bcd60e51b81526004016106da90614141565b600480546001600160a01b038381166001600160a01b03198316811790935516901561153e5761153e82600180600080600080620186a0619c4061c350613641565b604080516001600160a01b038085168252831660208201527fe6de78377637a5695d2171fe3588a8fd2420a00c06f84722772c705743f3140e910160405180910390a15050565b606060028054806020026020016040519081016040528092919081815260200182805480156115dd57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116115bf575b5050505050905090565b6001600160a01b03811660009081526008602052604081206001015460ff166116785760405162461bcd60e51b815260206004820152603e60248201527f496e746567726174696f6e4d61703a3a676574546f6b656e42696f735265776160448201527f72645765696768743a20546f6b656e20646f6573206e6f74206578697374000060648201526084016106da565b506001600160a01b031660009081526008602052604090206002015490565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916116cc9190600401614053565b60206040518083038186803b1580156116e457600080fd5b505afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016117479190613ff2565b60206040518083038186803b15801561175f57600080fd5b505afa158015611773573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117979190613fbe565b6117b35760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03821660009081526008602052604090206001015460ff1661184d5760405162461bcd60e51b8152602060048201526052602482015260008051602061445483398151915260448201527f666572466565506c6174666f726d526174696f4e756d657261746f723a20546f6064820152711ad95b88191bd95cc81b9bdd08195e1a5cdd60721b608482015260a4016106da565b620f42408111156119355760405162461bcd60e51b81526020600482015260a5602482015260008051602061445483398151915260448201527f666572466565506c6174666f726d526174696f4e756d657261746f723a20747260648201527f616e73666572466565506c6174666f726d526174696f4e756d657261746f722060848201527f6d757374206265206c657373207468616e206f7220657175616c20746f20747260a48201527f616e736665722066656520706c6174666f726d20726174696f2064656e6f6d6960c4820152643730ba37b960d91b60e4820152610104016106da565b6001600160a01b0382166000908152600860205260409020600601819055806004610864565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916119909190600401614053565b60206040518083038186803b1580156119a857600080fd5b505afa1580156119bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e09190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401611a0b9190613ff2565b60206040518083038186803b158015611a2357600080fd5b505afa158015611a37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a5b9190613fbe565b611a775760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03821660009081526008602052604090206001015460ff16611b085760405162461bcd60e51b815260206004820152603d60248201527f496e746567726174696f6e4d61703a3a757064617465546f6b656e526577617260448201527f645765696768743a20546f6b656e20646f6573206e6f7420657869737400000060648201526084016106da565b6001600160a01b03821660009081526008602052604081206002018290558190610864565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91611b629190600401614053565b60206040518083038186803b158015611b7a57600080fd5b505afa158015611b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb29190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401611bdd9190613ff2565b60206040518083038186803b158015611bf557600080fd5b505afa158015611c09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c2d9190613fbe565b611c495760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff16611cc15760405162461bcd60e51b815260206004820152603660248201526000805160206143548339815191526044820152750e88151bdad95b88191bd95cc81b9bdd08195e1a5cdd60521b60648201526084016106da565b6001600160a01b0381166000908152600860205260409020600101546301000000900460ff1615611d485760405162461bcd60e51b815260206004820152603f602482015260008051602061435483398151915260448201527f3a20546f6b656e20616c726561647920616363657074696e67204c50696e670060648201526084016106da565b6001600160a01b03811660009081526008602052604090206001908101805463ff000000191663010000001790556007610ba5565b6001600160a01b03811660009081526008602052604081206001015460ff16611dfc5760405162461bcd60e51b815260206004820152603f602482015260008051602061431483398151915260448201527f674465706f736974733a20546f6b656e20646f6573206e6f742065786973740060648201526084016106da565b506001600160a01b0316600090815260086020526040902060010154610100900460ff1690565b6005546000908210611e955760405162461bcd60e51b815260206004820152603560248201527f496e746567726174696f6e4d61703a3a676574546f6b656e416464726573733a60448201527408151bdad95b88191bd95cc81b9bdd08195e1a5cdd605a1b60648201526084016106da565b60058281548110610ed657634e487b7160e01b600052603260045260246000fd5b6001600160a01b03811660009081526008602052604081206001015460ff16611f465760405162461bcd60e51b8152602060048201526048602482015260008051602061447483398151915260448201527f4665654b56616c75654e756d657261746f723a20546f6b656e20646f6573206e6064820152671bdd08195e1a5cdd60c21b608482015260a4016106da565b506001600160a01b031660009081526008602052604090206005015490565b6001600160a01b03811660009081526008602052604081206001015460ff1661200a5760405162461bcd60e51b815260206004820152604b60248201527f496e746567726174696f6e4d61703a3a676574546f6b656e5461726765744c6960448201527f71756964697479526174696f4e756d657261746f723a20546f6b656e20646f6560648201526a1cc81b9bdd08195e1a5cdd60aa1b608482015260a4016106da565b506001600160a01b031660009081526008602052604090206004015490565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a9161205e9190600401614053565b60206040518083038186803b15801561207657600080fd5b505afa15801561208a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ae9190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016120d99190613ff2565b60206040518083038186803b1580156120f157600080fd5b505afa158015612105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121299190613fbe565b6121455760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff166121c15760405162461bcd60e51b815260206004820152603a602482015260008051602061449483398151915260448201527919da5b99ce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd60321b60648201526084016106da565b6001600160a01b038116600090815260086020526040902060010154600160201b900460ff166122555760405162461bcd60e51b8152602060048201526045602482015260008051602061449483398151915260448201527f67696e673a20546f6b656e206272696467696e6720616c72656164792064697360648201526418589b195960da1b608482015260a4016106da565b6001600160a01b03811660009081526008602081905260408220600101805460ff60201b19169055610ba5565b6001600160a01b03811660009081526008602052604081206001015460ff1661231f5760405162461bcd60e51b815260206004820152604360248201527f496e746567726174696f6e4d61703a3a676574546f6b656e526573657276655260448201527f6174696f4e756d657261746f723a20546f6b656e20646f6573206e6f742065786064820152621a5cdd60ea1b608482015260a4016106da565b506001600160a01b031660009081526008602052604090206003015490565b3360009081526001602052604090205460ff1661236d5760405162461bcd60e51b81526004016106da9061418f565b6001600160a01b03821660009081526007602052604090205460ff16156123f85760405162461bcd60e51b815260206004820152603960248201527f496e746567726174696f6e4d61703a3a616464496e746567726174696f6e3a20604482015278125b9d1959dc985d1a5bdb88185b1c9958591e481859191959603a1b60648201526084016106da565b6001600160a01b0382166000908152600760209081526040909120805460ff1916600190811782558351612433939290910191840190613c37565b5050600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811660009081526007602052604090205460609060ff166125185760405162461bcd60e51b815260206004820152603e60248201527f496e746567726174696f6e4d61703a3a676574496e746567726174696f6e4e6160448201527f6d653a20496e746567726174696f6e20646f6573206e6f74206578697374000060648201526084016106da565b6001600160a01b0382166000908152600760205260409020600101805461253e9061422b565b80601f016020809104026020016040519081016040528092919081815260200182805461256a9061422b565b80156125b75780601f1061258c576101008083540402835291602001916125b7565b820191906000526020600020905b81548152906001019060200180831161259a57829003601f168201915b50505050509050919050565b6000805b60055481101561263c5760086000600583815481106125f657634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b031683528201929092526040019020600201546126289083614213565b91508061263481614266565b9150506125c7565b5090565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916126759190600401614053565b60206040518083038186803b15801561268d57600080fd5b505afa1580156126a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126c59190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016126f09190613ff2565b60206040518083038186803b15801561270857600080fd5b505afa15801561271c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127409190613fbe565b61275c5760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff166127d75760405162461bcd60e51b815260206004820152603960248201526000805160206144b48339815191526044820152781a5b99ce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd603a1b60648201526084016106da565b6001600160a01b038116600090815260086020526040902060010154600160201b900460ff161561286c5760405162461bcd60e51b815260206004820152604560248201526000805160206144b483398151915260448201527f696e673a20546f6b656e20616c726561647920616363657074696e67206272696064820152646467696e6760d81b608482015260a4016106da565b6001600160a01b03811660009081526008602081905260409091206001908101805460ff60201b1916600160201b17905590610ba5565b3360009081526001602052604090205460ff166128d25760405162461bcd60e51b81526004016106da9061418f565b6128e48a8a8a8a8a8a8a8a8a8a613641565b50505050505050505050565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916129259190600401614053565b60206040518083038186803b15801561293d57600080fd5b505afa158015612951573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129759190613d54565b6001600160a01b0316632f54bf6e336040518263ffffffff1660e01b81526004016129a09190613ff2565b60206040518083038186803b1580156129b857600080fd5b505afa1580156129cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129f09190613fbe565b612a4f5760405162461bcd60e51b815260206004820152602a60248201527f436f6e74726f6c6c65643a3a6f6e6c794f776e65723a2043616c6c6572206973604482015269103737ba1037bbb732b960b11b60648201526084016106da565b6001600160a01b03811660009081526001602081905260408220805460ff19169091179055805b600254811015612ad55760028181548110612aa157634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b0384811691161415612ac557600191505b612ace81614266565b9050612a76565b5080612b2757600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b0319166001600160a01b0384161790555b5050565b6001600160a01b03811660009081526008602052604081206001015460ff16612ba95760405162461bcd60e51b815260206004820152603c602482015260008051602061431483398151915260448201527b19d31c1a5b99ce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd60221b60648201526084016106da565b506001600160a01b03166000908152600860205260409020600101546301000000900460ff1690565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91612c079190600401614053565b60206040518083038186803b158015612c1f57600080fd5b505afa158015612c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c579190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401612c829190613ff2565b60206040518083038186803b158015612c9a57600080fd5b505afa158015612cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cd29190613fbe565b612cee5760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03821660009081526008602052604090206001015460ff16612d7c5760405162461bcd60e51b8152602060048201526046602482015260008051602061443483398151915260448201527f7665526174696f4e756d657261746f723a20546f6b656e20646f6573206e6f7460648201526508195e1a5cdd60d21b608482015260a4016106da565b620f4240811115612e2f5760405162461bcd60e51b815260206004820152607f602482015260008051602061443483398151915260448201527f7665526174696f4e756d657261746f723a2072657365727665526174696f4e7560648201527f6d657261746f72206d757374206265206c657373207468616e206f722065717560848201527f616c20746f207265736572766520726174696f2064656e6f6d696e61746f720060a482015260c4016106da565b6001600160a01b0382166000908152600860205260409020600301819055806001610864565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a91612e8a9190600401614053565b60206040518083038186803b158015612ea257600080fd5b505afa158015612eb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eda9190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b8152600401612f059190613ff2565b60206040518083038186803b158015612f1d57600080fd5b505afa158015612f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f559190613fbe565b612f715760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff16612fea5760405162461bcd60e51b8152602060048201526037602482015260008051602061441483398151915260448201527619ce88151bdad95b88191bd95cc81b9bdd08195e1a5cdd604a1b60648201526084016106da565b6001600160a01b0381166000908152600860205260409020600101546301000000900460ff166130705760405162461bcd60e51b815260206004820152603f602482015260008051602061441483398151915260448201527f673a20546f6b656e204c50696e6720616c72656164792064697361626c65640060648201526084016106da565b6001600160a01b0381166000908152600860205260408120600101805463ff000000191690556007610ba5565b600054610100900460ff166130b85760005460ff16156130bc565b303b155b6130d85760405162461bcd60e51b81526004016106da906140ce565b600054610100900460ff161580156130fa576000805461ffff19166101011790555b6001600160a01b0383166131205760405162461bcd60e51b81526004016106da9061411c565b61312a8585613a01565b600380546001600160a01b038086166001600160a01b0319928316179092556004805492851692909116919091179055613175836001806000808061c350620186a0619c4082613641565b6001600160a01b038216156131a0576131a082600180600080600080620186a0619c40611388613641565b80156131b2576000805461ff00191690555b5050505050565b600281815481106131c957600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03811660009081526008602052604081206001015460ff166132625760405162461bcd60e51b815260206004820152603f602482015260008051602061431483398151915260448201527f674272696467696e673a20546f6b656e20646f6573206e6f742065786973740060648201526084016106da565b506001600160a01b0316600090815260086020526040902060010154600160201b900460ff1690565b6001600160a01b03811660009081526008602052604081206001015460ff166133225760405162461bcd60e51b815260206004820152604f602482015260008051602061447483398151915260448201527f466565506c6174666f726d526174696f4e756d657261746f723a20546f6b656e60648201526e08191bd95cc81b9bdd08195e1a5cdd608a1b608482015260a4016106da565b506001600160a01b031660009081526008602052604090206006015490565b600080546040516337c61fc560e11b8152620100009091046001600160a01b031691636f8c3f8a916133769190600401614053565b60206040518083038186803b15801561338e57600080fd5b505afa1580156133a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133c69190613d54565b6001600160a01b031663f3ae2415336040518263ffffffff1660e01b81526004016133f19190613ff2565b60206040518083038186803b15801561340957600080fd5b505afa15801561341d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134419190613fbe565b61345d5760405162461bcd60e51b81526004016106da90614141565b6001600160a01b03811660009081526008602052604090206001015460ff166134dc5760405162461bcd60e51b815260206004820152603d60248201526000805160206142f483398151915260448201527f64726177616c733a20546f6b656e20646f6573206e6f7420657869737400000060648201526084016106da565b6001600160a01b03811660009081526008602052604090206001015462010000900460ff166135755760405162461bcd60e51b815260206004820152604b60248201526000805160206142f483398151915260448201527f64726177616c733a20546f6b656e207769746864726177616c7320616c72656160648201526a191e48191a5cd8589b195960aa1b608482015260a4016106da565b6001600160a01b0381166000908152600860205260408120600101805462ff0000191690556006610ba5565b6001600160a01b03811660009081526008602052604081206001015460ff166136255760405162461bcd60e51b815260206004820152603060248201527f496e746567726174696f6e4d61703a3a676574546f6b656e49643a20546f6b6560448201526f1b88191bd95cc81b9bdd08195e1a5cdd60821b60648201526084016106da565b506001600160a01b031660009081526008602052604090205490565b6001600160a01b038a1660009081526008602052604090206001015460ff161561366a576128e4565b620f42408411156137195760405162461bcd60e51b815260206004820152606760248201527f496e746567726174696f6e4d61703a3a616464546f6b656e3a2072657365727660448201527f65526174696f4e756d657261746f72206d757374206265206c6573732074686160648201527f6e206f7220657175616c20746f207265736572766520726174696f2064656e6f60848201526636b4b730ba37b960c91b60a482015260c4016106da565b620f42408311156137b55760405162461bcd60e51b815260206004820152607860248201527f496e746567726174696f6e4d61703a3a616464546f6b656e3a2074617267657460448201526000805160206143b483398151915260648201526000805160206143748339815191526084820152773ab4b234ba3c903930ba34b7903232b737b6b4b730ba37b960411b60a482015260c4016106da565b620f424082111561385e5760405162461bcd60e51b815260206004820152607360248201526000805160206142d483398151915260448201527f65724665654b56616c75654e756d657261746f72206d757374206265206c657360648201527f73207468616e206f7220657175616c20746f207472616e7366657220666565206084820152722596bb30b63ab2903232b737b6b4b730ba37b960691b60a482015260c4016106da565b620f424081111561391b5760405162461bcd60e51b815260206004820152608160248201526000805160206142d483398151915260448201527f6572466565506c6174666f726d526174696f4e756d657261746f72206d75737460648201527f206265206c657373207468616e206f7220657175616c20746f207472616e736660848201527f65722066656520706c6174666f726d20726174696f2064656e6f6d696e61746f60a4820152603960f91b60c482015260e4016106da565b600580546001600160a01b03909b1660008181526008602052604081209c8d556001808e0180549a1515600160201b0260ff60201b199c151563010000000263ff000000199e151562010000029e909e1663ffff0000199f15156101000261ffff19909d169c909c1783179e909e169a909a179b909b17999099169a909a1790965560028a0194909455600389019290925560048801558683015560069095019490945583549182018455929092527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db090910180546001600160a01b0319169091179055565b600054610100900460ff16613a1c5760005460ff1615613a20565b303b155b613a3c5760405162461bcd60e51b81526004016106da906140ce565b600054610100900460ff16158015613a5e576000805461ffff19166101011790555b6001600160a01b038216613a845760405162461bcd60e51b81526004016106da9061411c565b60005b8351811015613afa5760006001600160a01b0316848281518110613abb57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03161415613aea5760405162461bcd60e51b81526004016106da9061411c565b613af381614266565b9050613a87565b5060005b8351811015613b6e576001806000868481518110613b2c57634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055613b6781614266565b9050613afe565b508251613b82906002906020860190613cb7565b50613b8c82613ba3565b8015613b9e576000805461ff00191690555b505050565b600054610100900460ff16613bbe5760005460ff1615613bc2565b303b155b613bde5760405162461bcd60e51b81526004016106da906140ce565b600054610100900460ff16158015613c00576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015612b27576000805461ff00191690555050565b828054613c439061422b565b90600052602060002090601f016020900481019282613c655760008555613cab565b82601f10613c7e57805160ff1916838001178555613cab565b82800160010185558215613cab579182015b82811115613cab578251825591602001919060010190613c90565b5061263c929150613d0c565b828054828255906000526020600020908101928215613cab579160200282015b82811115613cab57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190613cd7565b5b8082111561263c5760008155600101613d0d565b8035613d2c816142ad565b919050565b600060208284031215613d42578081fd5b8135613d4d816142ad565b9392505050565b600060208284031215613d65578081fd5b8151613d4d816142ad565b6000806000806000806000806000806101408b8d031215613d8f578586fd5b8a35613d9a816142ad565b995060208b0135613daa816142c5565b985060408b0135613dba816142c5565b975060608b0135613dca816142c5565b965060808b0135613dda816142c5565b999c989b50969995989760a0870135975060c08701359660e08101359650610100810135955061012001359350915050565b60008060408385031215613e1e578182fd5b8235613e29816142ad565b91506020838101356001600160401b0380821115613e45578384fd5b818601915086601f830112613e58578384fd5b813581811115613e6a57613e6a614297565b613e7c601f8201601f191685016141e3565b91508082528784828501011115613e91578485fd5b8084840185840137810190920192909252919491935090915050565b60008060408385031215613ebf578182fd5b8235613eca816142ad565b946020939093013593505050565b60008060008060808587031215613eed578384fd5b84356001600160401b0380821115613f03578586fd5b818701915087601f830112613f16578586fd5b8135602082821115613f2a57613f2a614297565b8160051b9250613f3b8184016141e3565b8281528181019085830185870184018d1015613f55578a8bfd5b8a96505b84871015613f835780359550613f6e866142ad565b85835260019690960195918301918301613f59565b509850613f939050898201613d21565b965050505050613fa560408601613d21565b9150613fb360608601613d21565b905092959194509250565b600060208284031215613fcf578081fd5b8151613d4d816142c5565b600060208284031215613feb578081fd5b5035919050565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b818110156140475783516001600160a01b031683529284019291840191600101614022565b50909695505050505050565b60208101600d831061407557634e487b7160e01b600052602160045260246000fd5b91905290565b6000602080835283518082850152825b818110156140a75785810183015185820160400152820161408b565b818111156140b85783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252600b908201526a626164206164647265737360a81b604082015260600190565b6020808252602e908201527f436f6e74726f6c6c65643a3a6f6e6c794d616e616765723a2043616c6c65722060408201526d34b9903737ba1036b0b730b3b2b960911b606082015260800190565b60208082526034908201527f436f6e74726f6c6c65643a3a6f6e6c79436f6e74726f6c6c65723a2043616c6c60408201527332b91034b9903737ba1031b7b73a3937b63632b960611b606082015260800190565b604051601f8201601f191681016001600160401b038111828210171561420b5761420b614297565b604052919050565b6000821982111561422657614226614281565b500190565b600181811c9082168061423f57607f821691505b6020821081141561426057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561427a5761427a614281565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146142c257600080fd5b50565b80151581146142c257600080fdfe496e746567726174696f6e4d61703a3a616464546f6b656e3a207472616e7366496e746567726174696f6e4d61703a3a64697361626c65546f6b656e57697468496e746567726174696f6e4d61703a3a676574546f6b656e416363657074696e496e746567726174696f6e4d61703a3a656e61626c65546f6b656e4465706f73496e746567726174696f6e4d61703a3a656e61626c65546f6b656e4c70696e676c657373207468616e206f7220657175616c20746f20746172676574206c6971496e746567726174696f6e4d61703a3a64697361626c65546f6b656e4465706f4c6971756964697479526174696f4e756d657261746f72206d75737420626520496e746567726174696f6e4d61703a3a656e61626c65546f6b656e5769746864496e746567726174696f6e4d61703a3a757064617465546f6b656e5461726765496e746567726174696f6e4d61703a3a64697361626c65546f6b656e4c70696e496e746567726174696f6e4d61703a3a757064617465546f6b656e5265736572496e746567726174696f6e4d61703a3a757064617465546f6b656e5472616e73496e746567726174696f6e4d61703a3a676574546f6b656e5472616e73666572496e746567726174696f6e4d61703a3a64697361626c65546f6b656e42726964496e746567726174696f6e4d61703a3a656e61626c65546f6b656e4272696467a2646970667358221220a55a8c692889d3d893994f718dcca27fdfab3bf2e1c3f3d2f5005f19e7d4620664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addIntegration(address,string)": {
        "params": {
          "contractAddress": "The address of the integration contract",
          "name": "The name of the protocol being integrated to"
        }
      },
      "addToken(address,bool,bool,bool,bool,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "acceptingDeposits": "Whether token deposits are enabled",
          "acceptingWithdrawals": "Whether token withdrawals are enabled",
          "biosRewardWeight": "Token weight for BIOS rewards",
          "reserveRatioNumerator": "Number that gets divided by reserve ratio denominator to get reserve ratio",
          "tokenAddress": "The address of the ERC20 token contract"
        }
      },
      "disableTokenBridging(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        }
      },
      "disableTokenDeposits(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        }
      },
      "disableTokenLping(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        }
      },
      "disableTokenWithdrawals(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        }
      },
      "enableTokenBridging(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        }
      },
      "enableTokenDeposits(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        }
      },
      "enableTokenLping(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        }
      },
      "enableTokenWithdrawals(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        }
      },
      "getBiosRewardWeightSum()": {
        "returns": {
          "rewardWeightSum": "reward weight of depositable tokens"
        }
      },
      "getBiosTokenAddress()": {
        "returns": {
          "_0": "The address of the BIOS token"
        }
      },
      "getIntegrationAddress(uint256)": {
        "params": {
          "integrationId": "The ID of the integration"
        },
        "returns": {
          "_0": "The address of the integration contract"
        }
      },
      "getIntegrationAddressesLength()": {
        "returns": {
          "_0": "The quantity of Integrations added"
        }
      },
      "getIntegrationName(address)": {
        "params": {
          "integrationAddress": "The address of the integration contract"
        },
        "returns": {
          "_0": "The name of the of the protocol being integrated to"
        }
      },
      "getReserveRatioDenominator()": {
        "returns": {
          "_0": "The token reserve ratio denominator"
        }
      },
      "getTargetLiquidityRatioDenominator()": {
        "returns": {
          "_0": "The target liquidity ratio denominator"
        }
      },
      "getTokenAcceptingBridging(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        },
        "returns": {
          "_0": "bool indicating whether Lping this token is currently enabled"
        }
      },
      "getTokenAcceptingDeposits(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        },
        "returns": {
          "_0": "bool indicating whether depositing this token is currently enabled"
        }
      },
      "getTokenAcceptingLping(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        },
        "returns": {
          "_0": "bool indicating whether Lping this token is currently enabled"
        }
      },
      "getTokenAcceptingWithdrawals(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        },
        "returns": {
          "_0": "bool indicating whether withdrawing this token is currently enabled"
        }
      },
      "getTokenAddress(uint256)": {
        "params": {
          "tokenId": "The ID of the token"
        },
        "returns": {
          "_0": "The address of the token ERC20 contract"
        }
      },
      "getTokenAddressesLength()": {
        "returns": {
          "_0": "The quantity of tokens added"
        }
      },
      "getTokenBiosRewardWeight(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        },
        "returns": {
          "_0": "The token BIOS reward weight"
        }
      },
      "getTokenId(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        },
        "returns": {
          "_0": "The index of the token in the tokens array"
        }
      },
      "getTokenReserveRatioNumerator(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        },
        "returns": {
          "_0": "The token reserve ratio numerator"
        }
      },
      "getTokenTargetLiquidityRatioNumerator(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        },
        "returns": {
          "_0": "The number that gets divided by target liquidity ratio denominator"
        }
      },
      "getTokenTransferFeeKValueNumerator(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        },
        "returns": {
          "_0": "The number that gets divided by transfer fee K-value denominator"
        }
      },
      "getTokenTransferFeePlatformRatioNumerator(address)": {
        "params": {
          "tokenAddress": "The address of the token ERC20 contract"
        },
        "returns": {
          "_0": "The number that gets divided by transfer fee platform ratio denominator"
        }
      },
      "getTransferFeeKValueDenominator()": {
        "returns": {
          "_0": "The transfer fee K-value denominator"
        }
      },
      "getTransferFeePlatformRatioDenominator()": {
        "returns": {
          "_0": "The transfer fee platform ratio denominator"
        }
      },
      "getWethTokenAddress()": {
        "returns": {
          "_0": "The address of the WETH token"
        }
      },
      "updateTokenReserveRatioNumerator(address,uint256)": {
        "params": {
          "reserveRatioNumerator": "Number that gets divided by reserve ratio denominator to get reserve ratio",
          "tokenAddress": "the address of the token ERC20 contract"
        }
      },
      "updateTokenRewardWeight(address,uint256)": {
        "params": {
          "rewardWeight": "The updated token BIOS reward weight",
          "tokenAddress": "The address of the token ERC20 contract"
        }
      },
      "updateTokenTargetLiquidityRatioNumerator(address,uint256)": {
        "params": {
          "targetLiquidityRatioNumerator": "Number that gets divided by target liquidity ratio denominator to get target liquidity ratio",
          "tokenAddress": "the address of the token ERC20 contract"
        }
      },
      "updateTokenTransferFeeKValueNumerator(address,uint256)": {
        "params": {
          "tokenAddress": "the address of the token ERC20 contract",
          "transferFeeKValueNumerator": "Number that gets divided by transfer fee K-value denominator to get K-value"
        }
      },
      "updateTokenTransferFeePlatformRatioNumerator(address,uint256)": {
        "params": {
          "tokenAddress": "the address of the token ERC20 contract",
          "transferFeePlatformRatioNumerator": "Number that gets divided by transfer fee platform ratio denominator to get the ratio of transfer fees sent to the platform instead of LPers"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getIntegrationAddressesLength()": {
        "notice": "Gets the length of supported integrations"
      },
      "getTokenAddressesLength()": {
        "notice": "Gets the length of supported tokens"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 723,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 726,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 10147,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "moduleMap",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(IModuleMap)21207"
      },
      {
        "astId": 4666,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "_controllers",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 4669,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "controllers",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 5494,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "wethTokenAddress",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 5496,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "biosTokenAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 5499,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "tokenAddresses",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 5502,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "integrationAddresses",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 5507,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "integrations",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_struct(Integration)20204_storage)"
      },
      {
        "astId": 5512,
        "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
        "label": "tokens",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(Token)20227_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IModuleMap)21207": {
        "encoding": "inplace",
        "label": "contract IModuleMap",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(Integration)20204_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IIntegrationMap.Integration)",
        "numberOfBytes": "32",
        "value": "t_struct(Integration)20204_storage"
      },
      "t_mapping(t_address,t_struct(Token)20227_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IIntegrationMap.Token)",
        "numberOfBytes": "32",
        "value": "t_struct(Token)20227_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Integration)20204_storage": {
        "encoding": "inplace",
        "label": "struct IIntegrationMap.Integration",
        "members": [
          {
            "astId": 20201,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "added",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 20203,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Token)20227_storage": {
        "encoding": "inplace",
        "label": "struct IIntegrationMap.Token",
        "members": [
          {
            "astId": 20206,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 20208,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "added",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 20210,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "acceptingDeposits",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 20212,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "acceptingWithdrawals",
            "offset": 2,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 20214,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "acceptingLping",
            "offset": 3,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 20216,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "acceptingBridging",
            "offset": 4,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 20218,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "biosRewardWeight",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 20220,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "reserveRatioNumerator",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 20222,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "targetLiquidityRatioNumerator",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 20224,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "transferFeeKValueNumerator",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 20226,
            "contract": "contracts/core/IntegrationMap.sol:IntegrationMap",
            "label": "transferFeePlatformRatioNumerator",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}